{
  "version": 3,
  "sources": ["../../node_modules/@zip.js/zip.js/lib/core/constants.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/stream-adapter.js", "../../node_modules/@zip.js/zip.js/lib/core/configuration.js", "../../node_modules/@zip.js/zip.js/lib/z-worker-inline.js", "../../node_modules/@zip.js/zip.js/lib/core/util/default-mime-type.js", "../../node_modules/@zip.js/zip.js/lib/core/util/stream-codec-shim.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/crc32.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/crc32-stream.js", "../../node_modules/@zip.js/zip.js/lib/core/util/encode-text.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/codecs/sjcl.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/common-crypto.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/aes-crypto-stream.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/zip-crypto-stream.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/zip-entry-stream.js", "../../node_modules/@zip.js/zip.js/lib/core/streams/codec-stream.js", "../../node_modules/@zip.js/zip.js/lib/core/codec-worker.js", "../../node_modules/@zip.js/zip.js/lib/core/codec-pool.js", "../../node_modules/@zip.js/zip.js/lib/core/io.js", "../../node_modules/@zip.js/zip.js/lib/core/util/cp437-decode.js", "../../node_modules/@zip.js/zip.js/lib/core/util/decode-text.js", "../../node_modules/@zip.js/zip.js/lib/core/zip-entry.js", "../../node_modules/@zip.js/zip.js/lib/core/zip-reader.js", "../../node_modules/@zip.js/zip.js/lib/core/zip-writer.js", "../../node_modules/@zip.js/zip.js/lib/zip.js"],
  "sourcesContent": ["/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\nconst EXTRAFIELD_TYPE_USDZ = 0x1986;\n\nconst BITFLAG_ENCRYPTED = 0x01;\nconst BITFLAG_LEVEL = 0x06;\nconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\nconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nconst UNDEFINED_VALUE = undefined;\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nexport {\n\tStreamAdapter\n};\n\nclass StreamAdapter {\n\n\tconstructor(Codec) {\n\t\treturn class extends TransformStream {\n\t\t\tconstructor(_format, options) {\n\t\t\t\tconst codec = new Codec(options);\n\t\t\t\tsuper({\n\t\t\t\t\ttransform(chunk, controller) {\n\t\t\t\t\t\tcontroller.enqueue(codec.append(chunk));\n\t\t\t\t\t},\n\t\t\t\t\tflush(controller) {\n\t\t\t\t\t\tconst chunk = codec.flush();\n\t\t\t\t\t\tif (chunk) {\n\t\t\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n} catch (_error) {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tworkerScripts: UNDEFINED_VALUE,\n\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURL,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tDeflate,\n\t\tInflate,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tworkerScripts\n\t} = configuration;\n\tsetIfDefined(\"baseURL\", baseURL);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tif (Deflate) {\n\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\n\t}\n\tif (Inflate) {\n\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\n\t}\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tif (workerScripts !== UNDEFINED_VALUE) {\n\t\tconst { deflate, inflate } = workerScripts;\n\t\tif (deflate || inflate) {\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t}\n\t\tif (deflate) {\n\t\t\tif (!Array.isArray(deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = deflate;\n\t\t}\n\t\tif (inflate) {\n\t\t\tif (!Array.isArray(inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = inflate;\n\t\t}\n\t}\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n", "function e(e){const t=()=>URL.createObjectURL(new Blob(['const{Array:e,Object:t,Number:n,Math:r,Error:s,Uint8Array:i,Uint16Array:o,Uint32Array:c,Int32Array:f,Map:a,DataView:l,Promise:u,TextEncoder:w,crypto:h,postMessage:d,TransformStream:p,ReadableStream:y,WritableStream:m,CompressionStream:b,DecompressionStream:g}=self;class k{constructor(e){return class extends p{constructor(t,n){const r=new e(n);super({transform(e,t){t.enqueue(r.append(e))},flush(e){const t=r.flush();t&&e.enqueue(t)}})}}}}const v=[];for(let e=0;256>e;e++){let t=e;for(let e=0;8>e;e++)1&t?t=t>>>1^3988292384:t>>>=1;v[e]=t}class S{constructor(e){this.t=e||-1}append(e){let t=0|this.t;for(let n=0,r=0|e.length;r>n;n++)t=t>>>8^v[255&(t^e[n])];this.t=t}get(){return~this.t}}class z extends p{constructor(){let e;const t=new S;super({transform(e,n){t.append(e),n.enqueue(e)},flush(){const n=new i(4);new l(n.buffer).setUint32(0,t.get()),e.value=n}}),e=this}}const C={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],r=C.i(n);return 32===r?e.concat(t):C.o(t,r,0|n,e.slice(0,e.length-1))},l(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+C.i(n)},u(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,r.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=C.h(t,e[n-1]&2147483648>>t-1,1)),e},h:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,i:e=>r.round(e/1099511627776)||32,o(e,t,n,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(n),n=0;if(0===t)return r.concat(e);for(let s=0;s<e.length;s++)r.push(n|e[s]>>>t),n=e[s]<<32-t;const s=e.length?e[e.length-1]:0,i=C.i(s);return r.push(C.h(t+i&31,t+i>32?n:r.pop(),1)),r}},x={p:{m(e){const t=C.l(e)/8,n=new i(t);let r;for(let s=0;t>s;s++)0==(3&s)&&(r=e[s/4]),n[s]=r>>>24,r<<=8;return n},g(e){const t=[];let n,r=0;for(n=0;n<e.length;n++)r=r<<8|e[n],3==(3&n)&&(t.push(r),r=0);return 3&n&&t.push(C.h(8*(3&n),r)),t}}},_=class{constructor(e){const t=this;t.blockSize=512,t.k=[1732584193,4023233417,2562383102,271733878,3285377520],t.v=[1518500249,1859775393,2400959708,3395469782],e?(t.S=e.S.slice(0),t.C=e.C.slice(0),t._=e._):t.reset()}reset(){const e=this;return e.S=e.k.slice(0),e.C=[],e._=0,e}update(e){const t=this;\"string\"==typeof e&&(e=x.A.g(e));const n=t.C=C.concat(t.C,e),r=t._,i=t._=r+C.l(e);if(i>9007199254740991)throw new s(\"Cannot hash more than 2^53 - 1 bits\");const o=new c(n);let f=0;for(let e=t.blockSize+r-(t.blockSize+r&t.blockSize-1);i>=e;e+=t.blockSize)t.I(o.subarray(16*f,16*(f+1))),f+=1;return n.splice(0,16*f),t}D(){const e=this;let t=e.C;const n=e.S;t=C.concat(t,[C.h(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(r.floor(e._/4294967296)),t.push(0|e._);t.length;)e.I(t.splice(0,16));return e.reset(),n}V(e,t,n,r){return e>19?e>39?e>59?e>79?void 0:t^n^r:t&n|t&r|n&r:t^n^r:t&n|~t&r}P(e,t){return t<<e|t>>>32-e}I(t){const n=this,s=n.S,i=e(80);for(let e=0;16>e;e++)i[e]=t[e];let o=s[0],c=s[1],f=s[2],a=s[3],l=s[4];for(let e=0;79>=e;e++){16>e||(i[e]=n.P(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const t=n.P(5,o)+n.V(e,c,f,a)+l+i[e]+n.v[r.floor(e/20)]|0;l=a,a=f,f=n.P(30,c),c=o,o=t}s[0]=s[0]+o|0,s[1]=s[1]+c|0,s[2]=s[2]+f|0,s[3]=s[3]+a|0,s[4]=s[4]+l|0}},A={getRandomValues(e){const t=new c(e.buffer),n=e=>{let t=987654321;const n=4294967295;return()=>(t=36969*(65535&t)+(t>>16)&n,(((t<<16)+(e=18e3*(65535&e)+(e>>16)&n)&n)/4294967296+.5)*(r.random()>.5?1:-1))};for(let s,i=0;i<e.length;i+=4){const e=n(4294967296*(s||r.random()));s=987654071*e(),t[i/4]=4294967296*e()|0}return e}},I={importKey:e=>new I.R(x.p.g(e)),B(e,t,n,r){if(n=n||1e4,0>r||0>n)throw new s(\"invalid params to pbkdf2\");const i=1+(r>>5)<<2;let o,c,f,a,u;const w=new ArrayBuffer(i),h=new l(w);let d=0;const p=C;for(t=x.p.g(t),u=1;(i||1)>d;u++){for(o=c=e.encrypt(p.concat(t,[u])),f=1;n>f;f++)for(c=e.encrypt(c),a=0;a<c.length;a++)o[a]^=c[a];for(f=0;(i||1)>d&&f<o.length;f++)h.setInt32(d,o[f]),d+=4}return w.slice(0,r/8)},R:class{constructor(e){const t=this,n=t.M=_,r=[[],[]];t.U=[new n,new n];const s=t.U[0].blockSize/32;e.length>s&&(e=(new n).update(e).D());for(let t=0;s>t;t++)r[0][t]=909522486^e[t],r[1][t]=1549556828^e[t];t.U[0].update(r[0]),t.U[1].update(r[1]),t.K=new n(t.U[0])}reset(){const e=this;e.K=new e.M(e.U[0]),e.N=!1}update(e){this.N=!0,this.K.update(e)}digest(){const e=this,t=e.K.D(),n=new e.M(e.U[1]).update(t).D();return e.reset(),n}encrypt(e){if(this.N)throw new s(\"encrypt on already updated hmac called!\");return this.update(e),this.digest(e)}}},D=void 0!==h&&\"function\"==typeof h.getRandomValues,V=\"Invalid password\",P=\"Invalid signature\",R=\"zipjs-abort-check-password\";function B(e){return D?h.getRandomValues(e):A.getRandomValues(e)}const E=16,M={name:\"PBKDF2\"},U=t.assign({hash:{name:\"HMAC\"}},M),K=t.assign({iterations:1e3,hash:{name:\"SHA-1\"}},M),N=[\"deriveBits\"],O=[8,12,16],T=[16,24,32],W=10,j=[0,0,0,0],H=\"undefined\",L=\"function\",F=typeof h!=H,q=F&&h.subtle,G=F&&typeof q!=H,J=x.p,Q=class{constructor(e){const t=this;t.O=[[[],[],[],[],[]],[[],[],[],[],[]]],t.O[0][0][0]||t.T();const n=t.O[0][4],r=t.O[1],i=e.length;let o,c,f,a=1;if(4!==i&&6!==i&&8!==i)throw new s(\"invalid aes key size\");for(t.v=[c=e.slice(0),f=[]],o=i;4*i+28>o;o++){let e=c[o-1];(o%i==0||8===i&&o%i==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],o%i==0&&(e=e<<8^e>>>24^a<<24,a=a<<1^283*(a>>7))),c[o]=c[o-i]^e}for(let e=0;o;e++,o--){const t=c[3&e?o:o-4];f[e]=4>=o||4>e?t:r[0][n[t>>>24]]^r[1][n[t>>16&255]]^r[2][n[t>>8&255]]^r[3][n[255&t]]}}encrypt(e){return this.W(e,0)}decrypt(e){return this.W(e,1)}T(){const e=this.O[0],t=this.O[1],n=e[4],r=t[4],s=[],i=[];let o,c,f,a;for(let e=0;256>e;e++)i[(s[e]=e<<1^283*(e>>7))^e]=e;for(let l=o=0;!n[l];l^=c||1,o=i[o]||1){let i=o^o<<1^o<<2^o<<3^o<<4;i=i>>8^255&i^99,n[l]=i,r[i]=l,a=s[f=s[c=s[l]]];let u=16843009*a^65537*f^257*c^16843008*l,w=257*s[i]^16843008*i;for(let n=0;4>n;n++)e[n][l]=w=w<<24^w>>>8,t[n][i]=u=u<<24^u>>>8}for(let n=0;5>n;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}W(e,t){if(4!==e.length)throw new s(\"invalid aes block size\");const n=this.v[t],r=n.length/4-2,i=[0,0,0,0],o=this.O[t],c=o[0],f=o[1],a=o[2],l=o[3],u=o[4];let w,h,d,p=e[0]^n[0],y=e[t?3:1]^n[1],m=e[2]^n[2],b=e[t?1:3]^n[3],g=4;for(let e=0;r>e;e++)w=c[p>>>24]^f[y>>16&255]^a[m>>8&255]^l[255&b]^n[g],h=c[y>>>24]^f[m>>16&255]^a[b>>8&255]^l[255&p]^n[g+1],d=c[m>>>24]^f[b>>16&255]^a[p>>8&255]^l[255&y]^n[g+2],b=c[b>>>24]^f[p>>16&255]^a[y>>8&255]^l[255&m]^n[g+3],g+=4,p=w,y=h,m=d;for(let e=0;4>e;e++)i[t?3&-e:e]=u[p>>>24]<<24^u[y>>16&255]<<16^u[m>>8&255]<<8^u[255&b]^n[g++],w=p,p=y,y=m,m=b,b=w;return i}},X=class{constructor(e,t){this.j=e,this.H=t,this.L=t}reset(){this.L=this.H}update(e){return this.F(this.j,e,this.L)}q(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,r=255&e;255===t?(t=0,255===n?(n=0,255===r?r=0:++r):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=r}else e+=1<<24;return e}G(e){0===(e[0]=this.q(e[0]))&&(e[1]=this.q(e[1]))}F(e,t,n){let r;if(!(r=t.length))return[];const s=C.l(t);for(let s=0;r>s;s+=4){this.G(n);const r=e.encrypt(n);t[s]^=r[0],t[s+1]^=r[1],t[s+2]^=r[2],t[s+3]^=r[3]}return C.u(t,s)}},Y=I.R;let Z=F&&G&&typeof q.importKey==L,$=F&&G&&typeof q.deriveBits==L;class ee extends p{constructor({password:e,signed:n,encryptionStrength:r,checkPasswordOnly:o}){super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,signed:n,X:r-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:c,J:f,ready:a}=n;r?(await(async(e,t,n,r)=>{const i=await re(e,t,n,ie(r,0,O[t])),o=ie(r,O[t]);if(i[0]!=o[0]||i[1]!=o[1])throw new s(V)})(n,c,r,ie(e,0,O[c]+2)),e=ie(e,O[c]+2),o?t.error(new s(R)):f()):await a;const l=new i(e.length-W-(e.length-W)%E);t.enqueue(ne(n,e,l,0,W,!0))},async flush(e){const{signed:t,Y:n,Z:r,pending:o,ready:c}=this;if(r&&n){await c;const f=ie(o,0,o.length-W),a=ie(o,o.length-W);let l=new i;if(f.length){const e=ce(J,f);r.update(e);const t=n.update(e);l=oe(J,t)}if(t){const e=ie(oe(J,r.digest()),0,W);for(let t=0;W>t;t++)if(e[t]!=a[t])throw new s(P)}e.enqueue(l)}}})}}class te extends p{constructor({password:e,encryptionStrength:n}){let r;super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,X:n-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:s,J:o,ready:c}=n;let f=new i;r?(f=await(async(e,t,n)=>{const r=B(new i(O[t]));return se(r,await re(e,t,n,r))})(n,s,r),o()):await c;const a=new i(f.length+e.length-e.length%E);a.set(f,0),t.enqueue(ne(n,e,a,f.length,0))},async flush(e){const{Y:t,Z:n,pending:s,ready:o}=this;if(n&&t){await o;let c=new i;if(s.length){const e=t.update(ce(J,s));n.update(e),c=oe(J,e)}r.signature=oe(J,n.digest()).slice(0,W),e.enqueue(se(c,r.signature))}}}),r=this}}function ne(e,t,n,r,s,o){const{Y:c,Z:f,pending:a}=e,l=t.length-s;let u;for(a.length&&(t=se(a,t),n=((e,t)=>{if(t&&t>e.length){const n=e;(e=new i(t)).set(n,0)}return e})(n,l-l%E)),u=0;l-E>=u;u+=E){const e=ce(J,ie(t,u,u+E));o&&f.update(e);const s=c.update(e);o||f.update(s),n.set(oe(J,s),u+r)}return e.pending=ie(t,u),n}async function re(n,r,s,o){n.password=null;const c=(e=>{if(void 0===w){const t=new i((e=unescape(encodeURIComponent(e))).length);for(let n=0;n<t.length;n++)t[n]=e.charCodeAt(n);return t}return(new w).encode(e)})(s),f=await(async(e,t,n,r,s)=>{if(!Z)return I.importKey(t);try{return await q.importKey(\"raw\",t,n,!1,s)}catch(e){return Z=!1,I.importKey(t)}})(0,c,U,0,N),a=await(async(e,t,n)=>{if(!$)return I.B(t,e.salt,K.iterations,n);try{return await q.deriveBits(e,t,n)}catch(r){return $=!1,I.B(t,e.salt,K.iterations,n)}})(t.assign({salt:o},K),f,8*(2*T[r]+2)),l=new i(a),u=ce(J,ie(l,0,T[r])),h=ce(J,ie(l,T[r],2*T[r])),d=ie(l,2*T[r]);return t.assign(n,{keys:{key:u,$:h,passwordVerification:d},Y:new X(new Q(u),e.from(j)),Z:new Y(h)}),d}function se(e,t){let n=e;return e.length+t.length&&(n=new i(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function ie(e,t,n){return e.subarray(t,n)}function oe(e,t){return e.m(t)}function ce(e,t){return e.g(t)}class fe extends p{constructor({password:e,passwordVerification:n,checkPasswordOnly:r}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;if(n.password){const t=le(n,e.subarray(0,12));if(n.password=null,t[11]!=n.passwordVerification)throw new s(V);e=e.subarray(12)}r?t.error(new s(R)):t.enqueue(le(n,e))}})}}class ae extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;let r,s;if(n.password){n.password=null;const t=B(new i(12));t[11]=n.passwordVerification,r=new i(e.length+t.length),r.set(ue(n,t),0),s=12}else r=new i(e.length),s=0;r.set(ue(n,e),s),t.enqueue(r)}})}}function le(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,n[r]);return n}function ue(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,t[r]);return n}function we(e,n){const r=[305419896,591751049,878082192];t.assign(e,{keys:r,ee:new S(r[0]),te:new S(r[2])});for(let t=0;t<n.length;t++)he(e,n.charCodeAt(t))}function he(e,t){let[n,s,i]=e.keys;e.ee.append([t]),n=~e.ee.get(),s=ye(r.imul(ye(s+pe(n)),134775813)+1),e.te.append([s>>>24]),i=~e.te.get(),e.keys=[n,s,i]}function de(e){const t=2|e.keys[2];return pe(r.imul(t,1^t)>>>8)}function pe(e){return 255&e}function ye(e){return 4294967295&e}const me=\"deflate-raw\";class be extends p{constructor(e,{chunkSize:t,CompressionStream:n,CompressionStreamNative:r}){super({});const{compressed:s,encrypted:i,useCompressionStream:o,zipCrypto:c,signed:f,level:a}=e,u=this;let w,h,d=ke(super.readable);i&&!c||!f||(w=new z,d=ze(d,w)),s&&(d=Se(d,o,{level:a,chunkSize:t},r,n)),i&&(c?d=ze(d,new ae(e)):(h=new te(e),d=ze(d,h))),ve(u,d,(()=>{let e;i&&!c&&(e=h.signature),i&&!c||!f||(e=new l(w.value.buffer).getUint32(0)),u.signature=e}))}}class ge extends p{constructor(e,{chunkSize:t,DecompressionStream:n,DecompressionStreamNative:r}){super({});const{zipCrypto:i,encrypted:o,signed:c,signature:f,compressed:a,useCompressionStream:u}=e;let w,h,d=ke(super.readable);o&&(i?d=ze(d,new fe(e)):(h=new ee(e),d=ze(d,h))),a&&(d=Se(d,u,{chunkSize:t},r,n)),o&&!i||!c||(w=new z,d=ze(d,w)),ve(this,d,(()=>{if((!o||i)&&c){const e=new l(w.value.buffer);if(f!=e.getUint32(0,!1))throw new s(P)}}))}}function ke(e){return ze(e,new p({transform(e,t){e&&e.length&&t.enqueue(e)}}))}function ve(e,n,r){n=ze(n,new p({flush:r})),t.defineProperty(e,\"readable\",{get:()=>n})}function Se(e,t,n,r,s){try{e=ze(e,new(t&&r?r:s)(me,n))}catch(r){if(!t)throw r;e=ze(e,new s(me,n))}return e}function ze(e,t){return e.pipeThrough(t)}const Ce=\"data\";class xe extends p{constructor(e,n){super({});const r=this,{codecType:s}=e;let i;s.startsWith(\"deflate\")?i=be:s.startsWith(\"inflate\")&&(i=ge);let o=0;const c=new i(e,n),f=super.readable,a=new p({transform(e,t){e&&e.length&&(o+=e.length,t.enqueue(e))},flush(){const{signature:e}=c;t.assign(r,{signature:e,size:o})}});t.defineProperty(r,\"readable\",{get:()=>f.pipeThrough(c).pipeThrough(a)})}}const _e=new a,Ae=new a;let Ie=0;async function De(e){try{const{options:t,scripts:r,config:s}=e;r&&r.length&&importScripts.apply(void 0,r),self.initCodec&&self.initCodec(),s.CompressionStreamNative=self.CompressionStream,s.DecompressionStreamNative=self.DecompressionStream,self.Deflate&&(s.CompressionStream=new k(self.Deflate)),self.Inflate&&(s.DecompressionStream=new k(self.Inflate));const i={highWaterMark:1,size:()=>s.chunkSize},o=e.readable||new y({async pull(e){const t=new u((e=>_e.set(Ie,e)));Ve({type:\"pull\",messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER;const{value:r,done:s}=await t;e.enqueue(r),s&&e.close()}},i),c=e.writable||new m({async write(e){let t;const r=new u((e=>t=e));Ae.set(Ie,t),Ve({type:Ce,value:e,messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER,await r}},i),f=new xe(t,s);await o.pipeThrough(f).pipeTo(c,{preventClose:!0,preventAbort:!0});try{await c.getWriter().close()}catch(e){}const{signature:a,size:l}=f;Ve({type:\"close\",result:{signature:a,size:l}})}catch(e){Pe(e)}}function Ve(e){let{value:t}=e;if(t)if(t.length)try{t=new i(t),e.value=t.buffer,d(e,[e.value])}catch(t){d(e)}else d(e);else d(e)}function Pe(e=new s(\"Unknown error\")){const{message:t,stack:n,code:r,name:i}=e;d({error:{message:t,stack:n,code:r,name:i}})}addEventListener(\"message\",(({data:e})=>{const{type:t,messageId:n,value:r,done:s}=e;try{if(\"start\"==t&&De(e),t==Ce){const e=_e.get(n);_e.delete(n),e({value:new i(r),done:s})}if(\"ack\"==t){const e=Ae.get(n);Ae.delete(n),e()}}catch(e){Pe(e)}}));const Re=-2;function Be(t){return Ee(t.map((([t,n])=>new e(t).fill(n,0,t))))}function Ee(t){return t.reduce(((t,n)=>t.concat(e.isArray(n)?Ee(n):n)),[])}const Me=[0,1,2,3].concat(...Be([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function Ue(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.ne=n=>{const s=e.re,i=e.ie.se,o=e.ie.oe;let c,f,a,l=-1;for(n.ce=0,n.fe=573,c=0;o>c;c++)0!==s[2*c]?(n.ae[++n.ce]=l=c,n.le[c]=0):s[2*c+1]=0;for(;2>n.ce;)a=n.ae[++n.ce]=2>l?++l:0,s[2*a]=1,n.le[a]=0,n.ue--,i&&(n.we-=i[2*a+1]);for(e.he=l,c=r.floor(n.ce/2);c>=1;c--)n.de(s,c);a=o;do{c=n.ae[1],n.ae[1]=n.ae[n.ce--],n.de(s,1),f=n.ae[1],n.ae[--n.fe]=c,n.ae[--n.fe]=f,s[2*a]=s[2*c]+s[2*f],n.le[a]=r.max(n.le[c],n.le[f])+1,s[2*c+1]=s[2*f+1]=a,n.ae[1]=a++,n.de(s,1)}while(n.ce>=2);n.ae[--n.fe]=n.ae[1],(t=>{const n=e.re,r=e.ie.se,s=e.ie.pe,i=e.ie.ye,o=e.ie.me;let c,f,a,l,u,w,h=0;for(l=0;15>=l;l++)t.be[l]=0;for(n[2*t.ae[t.fe]+1]=0,c=t.fe+1;573>c;c++)f=t.ae[c],l=n[2*n[2*f+1]+1]+1,l>o&&(l=o,h++),n[2*f+1]=l,f>e.he||(t.be[l]++,u=0,i>f||(u=s[f-i]),w=n[2*f],t.ue+=w*(l+u),r&&(t.we+=w*(r[2*f+1]+u)));if(0!==h){do{for(l=o-1;0===t.be[l];)l--;t.be[l]--,t.be[l+1]+=2,t.be[o]--,h-=2}while(h>0);for(l=o;0!==l;l--)for(f=t.be[l];0!==f;)a=t.ae[--c],a>e.he||(n[2*a+1]!=l&&(t.ue+=(l-n[2*a+1])*n[2*a],n[2*a+1]=l),f--)}})(n),((e,n,r)=>{const s=[];let i,o,c,f=0;for(i=1;15>=i;i++)s[i]=f=f+r[i-1]<<1;for(o=0;n>=o;o++)c=e[2*o+1],0!==c&&(e[2*o]=t(s[c]++,c))})(s,e.he,n.be)}}function Ke(e,t,n,r,s){const i=this;i.se=e,i.pe=t,i.ye=n,i.oe=r,i.me=s}Ue.ge=[0,1,2,3,4,5,6,7].concat(...Be([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),Ue.ke=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Ue.ve=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Ue.Se=e=>256>e?Me[e]:Me[256+(e>>>7)],Ue.ze=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ue.Ce=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Ue.xe=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ue._e=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const Ne=Be([[144,8],[112,9],[24,7],[8,8]]);Ke.Ae=Ee([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((e,t)=>[e,Ne[t]])));const Oe=Be([[30,5]]);function Te(e,t,n,r,s){const i=this;i.Ie=e,i.De=t,i.Ve=n,i.Pe=r,i.Re=s}Ke.Be=Ee([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((e,t)=>[e,Oe[t]]))),Ke.Ee=new Ke(Ke.Ae,Ue.ze,257,286,15),Ke.Me=new Ke(Ke.Be,Ue.Ce,0,30,15),Ke.Ue=new Ke(null,Ue.xe,0,19,7);const We=[new Te(0,0,0,0,0),new Te(4,4,8,4,1),new Te(4,5,16,8,1),new Te(4,6,32,32,1),new Te(4,4,16,16,2),new Te(8,16,32,32,2),new Te(8,16,128,128,2),new Te(8,32,128,256,2),new Te(32,128,258,1024,2),new Te(32,258,258,4096,2)],je=[\"need dictionary\",\"stream end\",\"\",\"\",\"stream error\",\"data error\",\"\",\"buffer error\",\"\",\"\"],He=113,Le=666,Fe=262;function qe(e,t,n,r){const s=e[2*t],i=e[2*n];return i>s||s==i&&r[t]<=r[n]}function Ge(){const e=this;let t,n,s,c,f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z,C,x,_,A,I,D,V,P,R,B,E,M,U;const K=new Ue,N=new Ue,O=new Ue;let T,W,j,H,L,F;function q(){let t;for(t=0;286>t;t++)E[2*t]=0;for(t=0;30>t;t++)M[2*t]=0;for(t=0;19>t;t++)U[2*t]=0;E[512]=1,e.ue=e.we=0,W=j=0}function G(e,t){let n,r=-1,s=e[1],i=0,o=7,c=4;0===s&&(o=138,c=3),e[2*(t+1)+1]=65535;for(let f=0;t>=f;f++)n=s,s=e[2*(f+1)+1],++i<o&&n==s||(c>i?U[2*n]+=i:0!==n?(n!=r&&U[2*n]++,U[32]++):i>10?U[36]++:U[34]++,i=0,r=n,0===s?(o=138,c=3):n==s?(o=6,c=3):(o=7,c=4))}function J(t){e.Ke[e.pending++]=t}function Q(e){J(255&e),J(e>>>8&255)}function X(e,t){let n;const r=t;F>16-r?(n=e,L|=n<<F&65535,Q(L),L=n>>>16-F,F+=r-16):(L|=e<<F&65535,F+=r)}function Y(e,t){const n=2*e;X(65535&t[n],65535&t[n+1])}function Z(e,t){let n,r,s=-1,i=e[1],o=0,c=7,f=4;for(0===i&&(c=138,f=3),n=0;t>=n;n++)if(r=i,i=e[2*(n+1)+1],++o>=c||r!=i){if(f>o)do{Y(r,U)}while(0!=--o);else 0!==r?(r!=s&&(Y(r,U),o--),Y(16,U),X(o-3,2)):o>10?(Y(18,U),X(o-11,7)):(Y(17,U),X(o-3,3));o=0,s=r,0===i?(c=138,f=3):r==i?(c=6,f=3):(c=7,f=4)}}function $(){16==F?(Q(L),L=0,F=0):8>F||(J(255&L),L>>>=8,F-=8)}function ee(t,n){let s,i,o;if(e.Ne[W]=t,e.Oe[W]=255&n,W++,0===t?E[2*n]++:(j++,t--,E[2*(Ue.ge[n]+256+1)]++,M[2*Ue.Se(t)]++),0==(8191&W)&&V>2){for(s=8*W,i=C-k,o=0;30>o;o++)s+=M[2*o]*(5+Ue.Ce[o]);if(s>>>=3,j<r.floor(W/2)&&s<r.floor(i/2))return!0}return W==T-1}function te(t,n){let r,s,i,o,c=0;if(0!==W)do{r=e.Ne[c],s=e.Oe[c],c++,0===r?Y(s,t):(i=Ue.ge[s],Y(i+256+1,t),o=Ue.ze[i],0!==o&&(s-=Ue.ke[i],X(s,o)),r--,i=Ue.Se(r),Y(i,n),o=Ue.Ce[i],0!==o&&(r-=Ue.ve[i],X(r,o)))}while(W>c);Y(256,t),H=t[513]}function ne(){F>8?Q(L):F>0&&J(255&L),L=0,F=0}function re(t,n,r){X(0+(r?1:0),3),((t,n)=>{ne(),H=8,Q(n),Q(~n),e.Ke.set(u.subarray(t,t+n),e.pending),e.pending+=n})(t,n)}function se(n){((t,n,r)=>{let s,i,o=0;V>0?(K.ne(e),N.ne(e),o=(()=>{let t;for(G(E,K.he),G(M,N.he),O.ne(e),t=18;t>=3&&0===U[2*Ue._e[t]+1];t--);return e.ue+=14+3*(t+1),t})(),s=e.ue+3+7>>>3,i=e.we+3+7>>>3,i>s||(s=i)):s=i=n+5,n+4>s||-1==t?i==s?(X(2+(r?1:0),3),te(Ke.Ae,Ke.Be)):(X(4+(r?1:0),3),((e,t,n)=>{let r;for(X(e-257,5),X(t-1,5),X(n-4,4),r=0;n>r;r++)X(U[2*Ue._e[r]+1],3);Z(E,e-1),Z(M,t-1)})(K.he+1,N.he+1,o+1),te(E,M)):re(t,n,r),q(),r&&ne()})(0>k?-1:k,C-k,n),k=C,t.Te()}function ie(){let e,n,r,s;do{if(s=w-_-C,0===s&&0===C&&0===_)s=f;else if(-1==s)s--;else if(C>=f+f-Fe){u.set(u.subarray(f,f+f),0),x-=f,C-=f,k-=f,e=y,r=e;do{n=65535&d[--r],d[r]=f>n?0:n-f}while(0!=--e);e=f,r=e;do{n=65535&h[--r],h[r]=f>n?0:n-f}while(0!=--e);s+=f}if(0===t.We)return;e=t.je(u,C+_,s),_+=e,3>_||(p=255&u[C],p=(p<<g^255&u[C+1])&b)}while(Fe>_&&0!==t.We)}function oe(e){let t,n,r=I,s=C,i=A;const o=C>f-Fe?C-(f-Fe):0;let c=B;const a=l,w=C+258;let d=u[s+i-1],p=u[s+i];R>A||(r>>=2),c>_&&(c=_);do{if(t=e,u[t+i]==p&&u[t+i-1]==d&&u[t]==u[s]&&u[++t]==u[s+1]){s+=2,t++;do{}while(u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&w>s);if(n=258-(w-s),s=w-258,n>i){if(x=e,i=n,n>=c)break;d=u[s+i-1],p=u[s+i]}}}while((e=65535&h[e&a])>o&&0!=--r);return i>_?_:i}e.le=[],e.be=[],e.ae=[],E=[],M=[],U=[],e.de=(t,n)=>{const r=e.ae,s=r[n];let i=n<<1;for(;i<=e.ce&&(i<e.ce&&qe(t,r[i+1],r[i],e.le)&&i++,!qe(t,s,r[i],e.le));)r[n]=r[i],n=i,i<<=1;r[n]=s},e.He=(t,S,x,W,j,G)=>(W||(W=8),j||(j=8),G||(G=0),t.Le=null,-1==S&&(S=6),1>j||j>9||8!=W||9>x||x>15||0>S||S>9||0>G||G>2?Re:(t.Fe=e,a=x,f=1<<a,l=f-1,m=j+7,y=1<<m,b=y-1,g=r.floor((m+3-1)/3),u=new i(2*f),h=[],d=[],T=1<<j+6,e.Ke=new i(4*T),s=4*T,e.Ne=new o(T),e.Oe=new i(T),V=S,P=G,(t=>(t.qe=t.Ge=0,t.Le=null,e.pending=0,e.Je=0,n=He,c=0,K.re=E,K.ie=Ke.Ee,N.re=M,N.ie=Ke.Me,O.re=U,O.ie=Ke.Ue,L=0,F=0,H=8,q(),(()=>{w=2*f,d[y-1]=0;for(let e=0;y-1>e;e++)d[e]=0;D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe,C=0,k=0,_=0,v=A=2,z=0,p=0})(),0))(t))),e.Qe=()=>42!=n&&n!=He&&n!=Le?Re:(e.Oe=null,e.Ne=null,e.Ke=null,d=null,h=null,u=null,e.Fe=null,n==He?-3:0),e.Xe=(e,t,n)=>{let r=0;return-1==t&&(t=6),0>t||t>9||0>n||n>2?Re:(We[V].Re!=We[t].Re&&0!==e.qe&&(r=e.Ye(1)),V!=t&&(V=t,D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe),P=n,r)},e.Ze=(e,t,r)=>{let s,i=r,o=0;if(!t||42!=n)return Re;if(3>i)return 0;for(i>f-Fe&&(i=f-Fe,o=r-i),u.set(t.subarray(o,o+i),0),C=i,k=i,p=255&u[0],p=(p<<g^255&u[1])&b,s=0;i-3>=s;s++)p=(p<<g^255&u[s+2])&b,h[s&l]=d[p],d[p]=s;return 0},e.Ye=(r,i)=>{let o,w,m,I,R;if(i>4||0>i)return Re;if(!r.$e||!r.et&&0!==r.We||n==Le&&4!=i)return r.Le=je[4],Re;if(0===r.tt)return r.Le=je[7],-5;var B;if(t=r,I=c,c=i,42==n&&(w=8+(a-8<<4)<<8,m=(V-1&255)>>1,m>3&&(m=3),w|=m<<6,0!==C&&(w|=32),w+=31-w%31,n=He,J((B=w)>>8&255),J(255&B)),0!==e.pending){if(t.Te(),0===t.tt)return c=-1,0}else if(0===t.We&&I>=i&&4!=i)return t.Le=je[7],-5;if(n==Le&&0!==t.We)return r.Le=je[7],-5;if(0!==t.We||0!==_||0!=i&&n!=Le){switch(R=-1,We[V].Re){case 0:R=(e=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=_){if(ie(),0===_&&0==e)return 0;if(0===_)break}if(C+=_,_=0,n=k+r,(0===C||C>=n)&&(_=C-n,C=n,se(!1),0===t.tt))return 0;if(C-k>=f-Fe&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 1:R=(e=>{let n,r=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C),0===r||(C-r&65535)>f-Fe||2!=P&&(v=oe(r)),3>v)n=ee(0,255&u[C]),_--,C++;else if(n=ee(C-x,v-3),_-=v,v>D||3>_)C+=v,v=0,p=255&u[C],p=(p<<g^255&u[C+1])&b;else{v--;do{C++,p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C}while(0!=--v);C++}if(n&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 2:R=(e=>{let n,r,s=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C),A=v,S=x,v=2,0!==s&&D>A&&f-Fe>=(C-s&65535)&&(2!=P&&(v=oe(s)),5>=v&&(1==P||3==v&&C-x>4096)&&(v=2)),3>A||v>A)if(0!==z){if(n=ee(0,255&u[C-1]),n&&se(!1),C++,_--,0===t.tt)return 0}else z=1,C++,_--;else{r=C+_-3,n=ee(C-1-S,A-3),_-=A-1,A-=2;do{++C>r||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C)}while(0!=--A);if(z=0,v=2,C++,n&&(se(!1),0===t.tt))return 0}}return 0!==z&&(n=ee(0,255&u[C-1]),z=0),se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i)}if(2!=R&&3!=R||(n=Le),0==R||2==R)return 0===t.tt&&(c=-1),0;if(1==R){if(1==i)X(2,3),Y(256,Ke.Ae),$(),9>1+H+10-F&&(X(2,3),Y(256,Ke.Ae),$()),H=7;else if(re(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(t.Te(),0===t.tt)return c=-1,0}}return 4!=i?0:1}}function Je(){const e=this;e.nt=0,e.rt=0,e.We=0,e.qe=0,e.tt=0,e.Ge=0}function Qe(e){const t=new Je,n=(o=e&&e.chunkSize?e.chunkSize:65536)+5*(r.floor(o/16383)+1);var o;const c=new i(n);let f=e?e.level:-1;void 0===f&&(f=-1),t.He(f),t.$e=c,this.append=(e,r)=>{let o,f,a=0,l=0,u=0;const w=[];if(e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,o=t.Ye(0),0!=o)throw new s(\"deflating: \"+t.Le);t.rt&&(t.rt==n?w.push(new i(c)):w.push(c.subarray(0,t.rt))),u+=t.rt,r&&t.nt>0&&t.nt!=a&&(r(t.nt),a=t.nt)}while(t.We>0||0===t.tt);return w.length>1?(f=new i(u),w.forEach((e=>{f.set(e,l),l+=e.length}))):f=w[0]?new i(w[0]):new i,f}},this.flush=()=>{let e,r,o=0,f=0;const a=[];do{if(t.rt=0,t.tt=n,e=t.Ye(4),1!=e&&0!=e)throw new s(\"deflating: \"+t.Le);n-t.tt>0&&a.push(c.slice(0,t.rt)),f+=t.rt}while(t.We>0||0===t.tt);return t.Qe(),r=new i(f),a.forEach((e=>{r.set(e,o),o+=e.length})),r}}Je.prototype={He(e,t){const n=this;return n.Fe=new Ge,t||(t=15),n.Fe.He(n,e,t)},Ye(e){const t=this;return t.Fe?t.Fe.Ye(t,e):Re},Qe(){const e=this;if(!e.Fe)return Re;const t=e.Fe.Qe();return e.Fe=null,t},Xe(e,t){const n=this;return n.Fe?n.Fe.Xe(n,e,t):Re},Ze(e,t){const n=this;return n.Fe?n.Fe.Ze(n,e,t):Re},je(e,t,n){const r=this;let s=r.We;return s>n&&(s=n),0===s?0:(r.We-=s,e.set(r.et.subarray(r.nt,r.nt+s),t),r.nt+=s,r.qe+=s,s)},Te(){const e=this;let t=e.Fe.pending;t>e.tt&&(t=e.tt),0!==t&&(e.$e.set(e.Fe.Ke.subarray(e.Fe.Je,e.Fe.Je+t),e.rt),e.rt+=t,e.Fe.Je+=t,e.Ge+=t,e.tt-=t,e.Fe.pending-=t,0===e.Fe.pending&&(e.Fe.Je=0))}};const Xe=-2,Ye=-3,Ze=-5,$e=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],et=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],tt=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],nt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],rt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],st=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],it=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ot(){let e,t,n,r,s,i;function o(e,t,o,c,f,a,l,u,w,h,d){let p,y,m,b,g,k,v,S,z,C,x,_,A,I,D;C=0,g=o;do{n[e[t+C]]++,C++,g--}while(0!==g);if(n[0]==o)return l[0]=-1,u[0]=0,0;for(S=u[0],k=1;15>=k&&0===n[k];k++);for(v=k,k>S&&(S=k),g=15;0!==g&&0===n[g];g--);for(m=g,S>g&&(S=g),u[0]=S,I=1<<k;g>k;k++,I<<=1)if(0>(I-=n[k]))return Ye;if(0>(I-=n[g]))return Ye;for(n[g]+=I,i[1]=k=0,C=1,A=2;0!=--g;)i[A]=k+=n[C],A++,C++;g=0,C=0;do{0!==(k=e[t+C])&&(d[i[k]++]=g),C++}while(++g<o);for(o=i[m],i[0]=g=0,C=0,b=-1,_=-S,s[0]=0,x=0,D=0;m>=v;v++)for(p=n[v];0!=p--;){for(;v>_+S;){if(b++,_+=S,D=m-_,D=D>S?S:D,(y=1<<(k=v-_))>p+1&&(y-=p+1,A=v,D>k))for(;++k<D&&(y<<=1)>n[++A];)y-=n[A];if(D=1<<k,h[0]+D>1440)return Ye;s[b]=x=h[0],h[0]+=D,0!==b?(i[b]=g,r[0]=k,r[1]=S,k=g>>>_-S,r[2]=x-s[b-1]-k,w.set(r,3*(s[b-1]+k))):l[0]=x}for(r[1]=v-_,o>C?d[C]<c?(r[0]=256>d[C]?0:96,r[2]=d[C++]):(r[0]=a[d[C]-c]+16+64,r[2]=f[d[C++]-c]):r[0]=192,y=1<<v-_,k=g>>>_;D>k;k+=y)w.set(r,3*(x+k));for(k=1<<v-1;0!=(g&k);k>>>=1)g^=k;for(g^=k,z=(1<<_)-1;(g&z)!=i[b];)b--,_-=S,z=(1<<_)-1}return 0!==I&&1!=m?Ze:0}function c(o){let c;for(e||(e=[],t=[],n=new f(16),r=[],s=new f(15),i=new f(16)),t.length<o&&(t=[]),c=0;o>c;c++)t[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;s.set(n.subarray(0,15),0),i.set(n.subarray(0,16),0)}this.st=(n,r,s,i,f)=>{let a;return c(19),e[0]=0,a=o(n,0,19,19,null,null,s,r,i,e,t),a==Ye?f.Le=\"oversubscribed dynamic bit lengths tree\":a!=Ze&&0!==r[0]||(f.Le=\"incomplete dynamic bit lengths tree\",a=Ye),a},this.it=(n,r,s,i,f,a,l,u,w)=>{let h;return c(288),e[0]=0,h=o(s,0,n,257,nt,rt,a,i,u,e,t),0!=h||0===i[0]?(h==Ye?w.Le=\"oversubscribed literal/length tree\":-4!=h&&(w.Le=\"incomplete literal/length tree\",h=Ye),h):(c(288),h=o(s,n,r,0,st,it,l,f,u,e,t),0!=h||0===f[0]&&n>257?(h==Ye?w.Le=\"oversubscribed distance tree\":h==Ze?(w.Le=\"incomplete distance tree\",h=Ye):-4!=h&&(w.Le=\"empty distance tree with lengths\",h=Ye),h):0)}}function ct(){const e=this;let t,n,r,s,i=0,o=0,c=0,f=0,a=0,l=0,u=0,w=0,h=0,d=0;function p(e,t,n,r,s,i,o,c){let f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z;d=c.nt,p=c.We,w=o.ot,h=o.ct,y=o.write,m=y<o.read?o.read-y-1:o.end-y,b=$e[e],g=$e[t];do{for(;20>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(f=w&b,a=n,l=r,z=3*(l+f),0!==(u=a[z]))for(;;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15,k=a[z+2]+(w&$e[u]),w>>=u,h-=u;15>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;for(f=w&g,a=s,l=i,z=3*(l+f),u=a[z];;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15;u>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(v=a[z+2]+(w&$e[u]),w>>=u,h-=u,m-=k,v>y){S=y-v;do{S+=o.end}while(0>S);if(u=o.end-S,k>u){if(k-=u,y-S>0&&u>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--u);else o.lt.set(o.lt.subarray(S,S+u),y),y+=u,S+=u,u=0;S=0}}else S=y-v,y-S>0&&2>y-S?(o.lt[y++]=o.lt[S++],o.lt[y++]=o.lt[S++],k-=2):(o.lt.set(o.lt.subarray(S,S+2),y),y+=2,S+=2,k-=2);if(y-S>0&&k>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--k);else o.lt.set(o.lt.subarray(S,S+k),y),y+=k,S+=k,k=0;break}if(0!=(64&u))return c.Le=\"invalid distance code\",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye;f+=a[z+2],f+=w&$e[u],z=3*(l+f),u=a[z]}break}if(0!=(64&u))return 0!=(32&u)?(k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,1):(c.Le=\"invalid literal/length code\",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye);if(f+=a[z+2],f+=w&$e[u],z=3*(l+f),0===(u=a[z])){w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--;break}}else w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--}while(m>=258&&p>=10);return k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,0}e.init=(e,i,o,c,f,a)=>{t=0,u=e,w=i,r=o,h=c,s=f,d=a,n=null},e.ut=(e,y,m)=>{let b,g,k,v,S,z,C,x=0,_=0,A=0;for(A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S;;)switch(t){case 0:if(z>=258&&v>=10&&(e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,m=p(u,w,r,h,s,d,e,y),A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S,0!=m)){t=1==m?7:9;break}c=u,n=r,o=h,t=1;case 1:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>>=n[g+1],_-=n[g+1],k=n[g],0===k){f=n[g+2],t=6;break}if(0!=(16&k)){a=15&k,i=n[g+2],t=2;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}if(0!=(32&k)){t=7;break}return t=9,y.Le=\"invalid literal/length code\",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 2:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}i+=x&$e[b],x>>=b,_-=b,c=w,n=s,o=d,t=3;case 3:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>=n[g+1],_-=n[g+1],k=n[g],0!=(16&k)){a=15&k,l=n[g+2],t=4;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}return t=9,y.Le=\"invalid distance code\",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 4:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}l+=x&$e[b],x>>=b,_-=b,t=5;case 5:for(C=S-l;0>C;)C+=e.end;for(;0!==i;){if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);e.lt[S++]=e.lt[C++],z--,C==e.end&&(C=0),i--}t=0;break;case 6:if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,e.lt[S++]=f,z--,t=0;break;case 7:if(_>7&&(_-=8,v++,A--),e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,e.read!=e.write)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);t=8;case 8:return m=1,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 9:return m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);default:return m=Xe,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m)}},e.ht=()=>{}}ot.dt=(e,t,n,r)=>(e[0]=9,t[0]=5,n[0]=et,r[0]=tt,0);const ft=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function at(e,t){const n=this;let r,s=0,o=0,c=0,a=0;const l=[0],u=[0],w=new ct;let h=0,d=new f(4320);const p=new ot;n.ct=0,n.ot=0,n.lt=new i(t),n.end=t,n.read=0,n.write=0,n.reset=(e,t)=>{t&&(t[0]=0),6==s&&w.ht(e),s=0,n.ct=0,n.ot=0,n.read=n.write=0},n.reset(e,null),n.wt=(e,t)=>{let r,s,i;return s=e.rt,i=n.read,r=(i>n.write?n.end:n.write)-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r,i==n.end&&(i=0,n.write==n.end&&(n.write=0),r=n.write-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r),e.rt=s,n.read=i,t},n.ut=(e,t)=>{let i,f,y,m,b,g,k,v;for(m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g;;){let S,z,C,x,_,A,I,D;switch(s){case 0:for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,s=1;break;case 1:S=[],z=[],C=[[]],x=[[]],ot.dt(S,z,C,x),w.init(S[0],z[0],C[0],0,x[0],0),f>>>=3,y-=3,s=6;break;case 2:f>>>=3,y-=3,s=3;break;case 3:return f>>>=3,y-=3,s=9,e.Le=\"invalid block type\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}break;case 1:for(;32>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return s=9,e.Le=\"invalid stored block lengths\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);o=65535&f,f=y=0,s=0!==o?2:0!==h?7:0;break;case 2:if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(0===k&&(g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k&&(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k)))return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(t=0,i=o,i>b&&(i=b),i>k&&(i=k),n.lt.set(e.je(m,i),g),m+=i,b-=i,g+=i,k-=i,0!=(o-=i))break;s=0!==h?7:0;break;case 3:for(;14>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return s=9,e.Le=\"too many length or distance symbols\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(v=0;i>v;v++)r[v]=0;f>>>=14,y-=14,a=0,s=4;case 4:for(;4+(c>>>10)>a;){for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}r[ft[a++]]=7&f,f>>>=3,y-=3}for(;19>a;)r[ft[a++]]=0;if(l[0]=7,i=p.st(r,l,u,d,e),0!=i)return(t=i)==Ye&&(r=null,s=9),n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);a=0,s=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>a;){let o,w;for(i=l[0];i>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(i=d[3*(u[0]+(f&$e[i]))+1],w=d[3*(u[0]+(f&$e[i]))+2],16>w)f>>>=i,y-=i,r[a++]=w;else{for(v=18==w?7:w-14,o=18==w?11:3;i+v>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(f>>>=i,y-=i,o+=f&$e[v],f>>>=v,y-=v,v=a,i=c,v+o>258+(31&i)+(i>>5&31)||16==w&&1>v)return r=null,s=9,e.Le=\"invalid bit length repeat\",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w=16==w?r[v-1]:0;do{r[v++]=w}while(0!=--o);a=v}}if(u[0]=-1,_=[],A=[],I=[],D=[],_[0]=9,A[0]=6,i=c,i=p.it(257+(31&i),1+(i>>5&31),r,_,A,I,D,d,e),0!=i)return i==Ye&&(r=null,s=9),t=i,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w.init(_[0],A[0],d,I[0],d,D[0]),s=6;case 6:if(n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,1!=(t=w.ut(n,e,t)))return n.wt(e,t);if(t=0,w.ht(e),m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g,0===h){s=0;break}s=7;case 7:if(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);s=8;case 8:return t=1,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);case 9:return t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);default:return t=Xe,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}}},n.ht=e=>{n.reset(e,null),n.lt=null,d=null},n.yt=(e,t,r)=>{n.lt.set(e.subarray(t,t+r),0),n.read=n.write=r},n.bt=()=>1==s?1:0}const lt=13,ut=[0,0,255,255];function wt(){const e=this;function t(e){return e&&e.gt?(e.qe=e.Ge=0,e.Le=null,e.gt.mode=7,e.gt.kt.reset(e,null),0):Xe}e.mode=0,e.method=0,e.vt=[0],e.St=0,e.marker=0,e.zt=0,e.Ct=t=>(e.kt&&e.kt.ht(t),e.kt=null,0),e.xt=(n,r)=>(n.Le=null,e.kt=null,8>r||r>15?(e.Ct(n),Xe):(e.zt=r,n.gt.kt=new at(n,1<<r),t(n),0)),e._t=(e,t)=>{let n,r;if(!e||!e.gt||!e.et)return Xe;const s=e.gt;for(t=4==t?Ze:0,n=Ze;;)switch(s.mode){case 0:if(0===e.We)return n;if(n=t,e.We--,e.qe++,8!=(15&(s.method=e.ft(e.nt++)))){s.mode=lt,e.Le=\"unknown compression method\",s.marker=5;break}if(8+(s.method>>4)>s.zt){s.mode=lt,e.Le=\"invalid win size\",s.marker=5;break}s.mode=1;case 1:if(0===e.We)return n;if(n=t,e.We--,e.qe++,r=255&e.ft(e.nt++),((s.method<<8)+r)%31!=0){s.mode=lt,e.Le=\"incorrect header check\",s.marker=5;break}if(0==(32&r)){s.mode=7;break}s.mode=2;case 2:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St=(255&e.ft(e.nt++))<<24&4278190080,s.mode=3;case 3:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<16&16711680,s.mode=4;case 4:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<8&65280,s.mode=5;case 5:return 0===e.We?n:(n=t,e.We--,e.qe++,s.St+=255&e.ft(e.nt++),s.mode=6,2);case 6:return s.mode=lt,e.Le=\"need dictionary\",s.marker=0,Xe;case 7:if(n=s.kt.ut(e,n),n==Ye){s.mode=lt,s.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,s.kt.reset(e,s.vt),s.mode=12;case 12:return e.We=0,1;case lt:return Ye;default:return Xe}},e.At=(e,t,n)=>{let r=0,s=n;if(!e||!e.gt||6!=e.gt.mode)return Xe;const i=e.gt;return s<1<<i.zt||(s=(1<<i.zt)-1,r=n-s),i.kt.yt(t,r,s),i.mode=7,0},e.It=e=>{let n,r,s,i,o;if(!e||!e.gt)return Xe;const c=e.gt;if(c.mode!=lt&&(c.mode=lt,c.marker=0),0===(n=e.We))return Ze;for(r=e.nt,s=c.marker;0!==n&&4>s;)e.ft(r)==ut[s]?s++:s=0!==e.ft(r)?0:4-s,r++,n--;return e.qe+=r-e.nt,e.nt=r,e.We=n,c.marker=s,4!=s?Ye:(i=e.qe,o=e.Ge,t(e),e.qe=i,e.Ge=o,c.mode=7,0)},e.Dt=e=>e&&e.gt&&e.gt.kt?e.gt.kt.bt():Xe}function ht(){}function dt(e){const t=new ht,n=e&&e.chunkSize?r.floor(2*e.chunkSize):131072,o=new i(n);let c=!1;t.xt(),t.$e=o,this.append=(e,r)=>{const f=[];let a,l,u=0,w=0,h=0;if(0!==e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,0!==t.We||c||(t.nt=0,c=!0),a=t._t(0),c&&a===Ze){if(0!==t.We)throw new s(\"inflating: bad input\")}else if(0!==a&&1!==a)throw new s(\"inflating: \"+t.Le);if((c||1===a)&&t.We===e.length)throw new s(\"inflating: bad input\");t.rt&&(t.rt===n?f.push(new i(o)):f.push(o.subarray(0,t.rt))),h+=t.rt,r&&t.nt>0&&t.nt!=u&&(r(t.nt),u=t.nt)}while(t.We>0||0===t.tt);return f.length>1?(l=new i(h),f.forEach((e=>{l.set(e,w),w+=e.length}))):l=f[0]?new i(f[0]):new i,l}},this.flush=()=>{t.Ct()}}ht.prototype={xt(e){const t=this;return t.gt=new wt,e||(e=15),t.gt.xt(t,e)},_t(e){const t=this;return t.gt?t.gt._t(t,e):Xe},Ct(){const e=this;if(!e.gt)return Xe;const t=e.gt.Ct(e);return e.gt=null,t},It(){const e=this;return e.gt?e.gt.It(e):Xe},At(e,t){const n=this;return n.gt?n.gt.At(n,e,t):Xe},ft(e){return this.et[e]},je(e,t){return this.et.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Qe,self.Inflate=dt};\\n'],{type:\"text/javascript\"}));e({workerScripts:{inflate:[t],deflate:[t]}})}export{e as configureWebWorker};\n", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst mimeTypes = {};\n\nexport {\n\tmimeTypes,\n\tgetMimeType\n};\n\nfunction getMimeType() {\n\treturn \"application/octet-stream\";\n}", "\n/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// deno-lint-ignore-file no-this-alias\n\nexport {\n\tinitShimAsyncCodec\n};\n\nfunction initShimAsyncCodec(library, options = {}, registerDataHandler) {\n\treturn {\n\t\tDeflate: createCodecClass(library.Deflate, options.deflate, registerDataHandler),\n\t\tInflate: createCodecClass(library.Inflate, options.inflate, registerDataHandler)\n\t};\n}\n\nfunction objectHasOwn(object, propertyName) {\n\t// eslint-disable-next-line no-prototype-builtins\n\treturn typeof Object.hasOwn === \"function\" ? Object.hasOwn(object, propertyName) : object.hasOwnProperty(propertyName);\n}\n\nfunction createCodecClass(constructor, constructorOptions, registerDataHandler) {\n\treturn class {\n\n\t\tconstructor(options) {\n\t\t\tconst codecAdapter = this;\n\t\t\tconst onData = data => {\n\t\t\t\tif (codecAdapter.pendingData) {\n\t\t\t\t\tconst previousPendingData = codecAdapter.pendingData;\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(previousPendingData.length + data.length);\n\t\t\t\t\tconst { pendingData } = codecAdapter;\n\t\t\t\t\tpendingData.set(previousPendingData, 0);\n\t\t\t\t\tpendingData.set(data, previousPendingData.length);\n\t\t\t\t} else {\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(data);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (objectHasOwn(options, \"level\") && options.level === undefined) {\n\t\t\t\tdelete options.level;\n\t\t\t}\n\t\t\tcodecAdapter.codec = new constructor(Object.assign({}, constructorOptions, options));\n\t\t\tregisterDataHandler(codecAdapter.codec, onData);\n\t\t}\n\t\tappend(data) {\n\t\t\tthis.codec.push(data);\n\t\t\treturn getResponse(this);\n\t\t}\n\t\tflush() {\n\t\t\tthis.codec.push(new Uint8Array(), true);\n\t\t\treturn getResponse(this);\n\t\t}\n\t};\n\n\tfunction getResponse(codec) {\n\t\tif (codec.pendingData) {\n\t\t\tconst output = codec.pendingData;\n\t\t\tcodec.pendingData = null;\n\t\t\treturn output;\n\t\t} else {\n\t\t\treturn new Uint8Array();\n\t\t}\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport {\n\tCrc32\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nimport { Crc32 } from \"./codecs/crc32.js\";\n\nclass Crc32Stream extends TransformStream {\n\n\tconstructor() {\n\t\tlet stream;\n\t\tconst crc32 = new Crc32();\n\t\tsuper({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tcrc32.append(chunk);\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst value = new Uint8Array(4);\n\t\t\t\tconst dataView = new DataView(value.buffer);\n\t\t\t\tdataView.setUint32(0, crc32.get());\n\t\t\t\tstream.value = value;\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tCrc32Stream\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nexport {\n\tencodeText\n};\n\nfunction encodeText(value) {\n\tif (typeof TextEncoder == \"undefined\") {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}", "// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\n\n// deno-lint-ignore-file no-this-alias\n\n/*\n * SJCL is open. You can use, modify and redistribute it under a BSD\n * license or under the GNU GPL, version 2.0.\n */\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = class {\n\tconstructor(hash) {\n\t\tconst sha1 = this;\n\t\t/**\n\t\t * The hash's block size, in bits.\n\t\t * @constant\n\t\t */\n\t\tsha1.blockSize = 512;\n\t\t/**\n\t\t * The SHA-1 initialization vector.\n\t\t * @private\n\t\t */\n\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\t\t/**\n\t\t * The SHA-1 hash key.\n\t\t * @private\n\t\t */\n\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\t\tif (hash) {\n\t\t\tsha1._h = hash._h.slice(0);\n\t\t\tsha1._buffer = hash._buffer.slice(0);\n\t\t\tsha1._length = hash._length;\n\t\t} else {\n\t\t\tsha1.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset() {\n\t\tconst sha1 = this;\n\t\tsha1._h = sha1._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate(data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize() {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t}\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f(t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t}\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S(n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t}\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block(words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tconst out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\t\tconst bs = hmac._baseHash[0].blockSize / 32;\n\n\t\tif (key.length > bs) {\n\t\t\tkey = new Hash().update(key).finalize();\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport {\n\trandom\n} from \"./codecs/sjcl.js\";\n\nconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != \"undefined\" && typeof crypto.getRandomValues == \"function\";\n\nconst ERR_INVALID_PASSWORD = \"Invalid password\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\nconst ERR_ABORT_CHECK_PASSWORD = \"zipjs-abort-check-password\";\n\nexport {\n\tgetRandomValues,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction getRandomValues(array) {\n\tif (GET_RANDOM_VALUES_SUPPORTED) {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { encodeText } from \"./../util/encode-text.js\";\nimport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode\n} from \"./codecs/sjcl.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n// deno-lint-ignore valid-typeof\nconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\nconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\n\nlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\nlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\n\nclass AESDecryptionStream extends TransformStream {\n\n\tconstructor({ password, signed, encryptionStrength, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tsigned,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tif (password) {\n\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\n\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\n\t\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveReady();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tsigned,\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\n\t\t\t\t\tlet decryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (chunkToDecrypt.length) {\n\t\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\n\t\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tif (signed) {\n\t\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.enqueue(decryptedChunkArray);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AESEncryptionStream extends TransformStream {\n\n\tconstructor({ password, encryptionStrength }) {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tlet preamble = new Uint8Array();\n\t\t\t\tif (password) {\n\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\n\t\t\t\toutput.set(preamble, 0);\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tif (hmac && ctr) {\n\t\t\t\t\tawait ready;\n\t\t\t\t\tlet encryptedChunkArray = new Uint8Array();\n\t\t\t\t\tif (pending.length) {\n\t\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\n\t\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\n\t\t\t\t\t}\n\t\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\n\t\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tAESDecryptionStream,\n\tAESEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst {\n\t\tctr,\n\t\thmac,\n\t\tpending\n\t} = aesCrypto;\n\tconst inputLength = input.length - paddingEnd;\n\tif (pending.length) {\n\t\tinput = concat(pending, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\thmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = ctr.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\thmac.update(outputChunk);\n\t\t}\n\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pending = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, strength, password, preamble) {\n\tconst passwordVerificationKey = await createKeys(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\n\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, strength, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\n\tconst passwordVerification = await createKeys(encrypt, strength, password, salt);\n\treturn concat(salt, passwordVerification);\n}\n\nasync function createKeys(aesCrypto, strength, password, salt) {\n\taesCrypto.password = null;\n\tconst encodedPassword = encodeText(password);\n\tconst baseKey = await importKey(RAW_FORMAT, encodedPassword, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\n\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\n\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\n\tObject.assign(aesCrypto, {\n\t\tkeys: {\n\t\t\tkey,\n\t\t\tauthentication,\n\t\t\tpasswordVerification\n\t\t},\n\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\n\t\thmac: new HmacSha1(authentication)\n\t});\n\treturn passwordVerification;\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (IMPORT_KEY_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t\t} catch (_error) {\n\t\t\tIMPORT_KEY_SUPPORTED = false;\n\t\t\treturn misc.importKey(password);\n\t\t}\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (DERIVE_BITS_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\n\t\t} catch (_error) {\n\t\t\tDERIVE_BITS_SUPPORTED = false;\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t\t}\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}\n\nfunction fromBits(codecBytes, chunk) {\n\treturn codecBytes.fromBits(chunk);\n}\nfunction toBits(codecBytes, chunk) {\n\treturn codecBytes.toBits(chunk);\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32 } from \"./codecs/crc32.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification, checkPasswordOnly }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\n\t\t\t\t}\n\t\t\t\tif (checkPasswordOnly) {\n\t\t\t\t\tcontroller.error(new Error(ERR_ABORT_CHECK_PASSWORD));\n\t\t\t\t} else {\n\t\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ZipCryptoEncryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tlet output;\n\t\t\t\tlet offset;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\n\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\t\t\toffset = HEADER_LENGTH;\n\t\t\t\t} else {\n\t\t\t\t\toutput = new Uint8Array(chunk.length);\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\n\t\t\t\tcontroller.enqueue(output);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tZipCryptoDecryptionStream,\n\tZipCryptoEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\tconst keys = [0x12345678, 0x23456789, 0x34567890];\n\tObject.assign(target, {\n\t\tkeys,\n\t\tcrcKey0: new Crc32(keys[0]),\n\t\tcrcKey2: new Crc32(keys[2]),\n\t});\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\tlet [key0, key1, key2] = target.keys;\n\ttarget.crcKey0.append([byte]);\n\tkey0 = ~target.crcKey0.get();\n\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\n\ttarget.crcKey2.append([key1 >>> 24]);\n\tkey2 = ~target.crcKey2.get();\n\ttarget.keys = [key0, key1, key2];\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32Stream } from \"./crc32-stream.js\";\nimport {\n\tAESEncryptionStream,\n\tAESDecryptionStream\n} from \"./aes-crypto-stream.js\";\nimport {\n\tZipCryptoEncryptionStream,\n\tZipCryptoDecryptionStream\n} from \"./zip-crypto-stream.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./common-crypto.js\";\n\nconst COMPRESSION_FORMAT = \"deflate-raw\";\n\nclass DeflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, CompressionStream, CompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\n\t\tconst stream = this;\n\t\tlet crc32Stream, encryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStreamNative, CompressionStream);\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\n\t\t\t} else {\n\t\t\t\tencryptionStream = new AESEncryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, encryptionStream);\n\t\t\t}\n\t\t}\n\t\tsetReadable(stream, readable, () => {\n\t\t\tlet signature;\n\t\t\tif (encrypted && !zipCrypto) {\n\t\t\t\tsignature = encryptionStream.signature;\n\t\t\t}\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tsignature = new DataView(crc32Stream.value.buffer).getUint32(0);\n\t\t\t}\n\t\t\tstream.signature = signature;\n\t\t});\n\t}\n}\n\nclass InflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, DecompressionStream, DecompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream } = options;\n\t\tlet crc32Stream, decryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\n\t\t\t} else {\n\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, decryptionStream);\n\t\t\t}\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize }, DecompressionStreamNative, DecompressionStream);\n\t\t}\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\tcrc32Stream = new Crc32Stream();\n\t\t\treadable = pipeThrough(readable, crc32Stream);\n\t\t}\n\t\tsetReadable(this, readable, () => {\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tconst dataViewSignature = new DataView(crc32Stream.value.buffer);\n\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tDeflateStream,\n\tInflateStream,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nfunction filterEmptyChunks(readable) {\n\treturn pipeThrough(readable, new TransformStream({\n\t\ttransform(chunk, controller) {\n\t\t\tif (chunk && chunk.length) {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t}\n\t\t}\n\t}));\n}\n\nfunction setReadable(stream, readable, flush) {\n\treadable = pipeThrough(readable, new TransformStream({ flush }));\n\tObject.defineProperty(stream, \"readable\", {\n\t\tget() {\n\t\t\treturn readable;\n\t\t}\n\t});\n}\n\nfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CodecStreamNative, CodecStream) {\n\ttry {\n\t\tconst CompressionStream = useCompressionStream && CodecStreamNative ? CodecStreamNative : CodecStream;\n\t\treadable = pipeThrough(readable, new CompressionStream(COMPRESSION_FORMAT, options));\n\t} catch (error) {\n\t\tif (useCompressionStream) {\n\t\t\treadable = pipeThrough(readable, new CodecStream(COMPRESSION_FORMAT, options));\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n\treturn readable;\n}\n\nfunction pipeThrough(readable, transformStream) {\n\treturn readable.pipeThrough(transformStream);\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tInflateStream,\n\tDeflateStream\n} from \"./zip-entry-stream.js\";\n\nconst MESSAGE_EVENT_TYPE = \"message\";\nconst MESSAGE_START = \"start\";\nconst MESSAGE_PULL = \"pull\";\nconst MESSAGE_DATA = \"data\";\nconst MESSAGE_ACK_DATA = \"ack\";\nconst MESSAGE_CLOSE = \"close\";\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\n\nexport {\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tERR_ABORT_CHECK_PASSWORD,\n\tCodecStream\n};\n\nclass CodecStream extends TransformStream {\n\n\tconstructor(options, config) {\n\t\tsuper({});\n\t\tconst codec = this;\n\t\tconst { codecType } = options;\n\t\tlet Stream;\n\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\n\t\t\tStream = DeflateStream;\n\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\n\t\t\tStream = InflateStream;\n\t\t}\n\t\tlet size = 0;\n\t\tconst stream = new Stream(options, config);\n\t\tconst readable = super.readable;\n\t\tconst transformStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tsize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst { signature } = stream;\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tsignature,\n\t\t\t\t\tsize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(codec, \"readable\", {\n\t\t\tget() {\n\t\t\t\treturn readable.pipeThrough(stream).pipeThrough(transformStream);\n\t\t\t}\n\t\t});\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL, TransformStream, WritableStream */\n\nimport {\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport {\n\tCodecStream,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE\n} from \"./streams/codec-stream.js\";\n\n// deno-lint-ignore valid-typeof\nconst WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE;\n\nexport {\n\tCodecWorker\n};\n\nclass CodecWorker {\n\n\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, scripts }, onTaskFinished) {\n\t\tconst { signal } = streamOptions;\n\t\tObject.assign(workerData, {\n\t\t\tbusy: true,\n\t\t\treadable: readable.pipeThrough(new ProgressWatcherStream(readable, streamOptions, config), { signal }),\n\t\t\twritable,\n\t\t\toptions: Object.assign({}, options),\n\t\t\tscripts,\n\t\t\ttransferStreams,\n\t\t\tterminate() {\n\t\t\t\tconst { worker, busy } = workerData;\n\t\t\t\tif (worker && !busy) {\n\t\t\t\t\tworker.terminate();\n\t\t\t\t\tworkerData.interface = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTaskFinished() {\n\t\t\t\tworkerData.busy = false;\n\t\t\t\tonTaskFinished(workerData);\n\t\t\t}\n\t\t});\n\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\n\t}\n}\n\nclass ProgressWatcherStream extends TransformStream {\n\n\tconstructor(readableSource, { onstart, onprogress, size, onend }, { chunkSize }) {\n\t\tlet chunkOffset = 0;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tif (onstart) {\n\t\t\t\t\tcallHandler(onstart, size);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tchunkOffset += chunk.length;\n\t\t\t\tif (onprogress) {\n\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\treadableSource.size = chunkOffset;\n\t\t\t\tif (onend) {\n\t\t\t\t\tcallHandler(onend, chunkOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { highWaterMark: 1, size: () => chunkSize });\n\t}\n}\n\nasync function callHandler(handler, ...parameters) {\n\ttry {\n\t\tawait handler(...parameters);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction createWorkerInterface(workerData, config) {\n\treturn {\n\t\trun: () => runWorker(workerData, config)\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, { baseURL, chunkSize }) {\n\tif (!workerData.interface) {\n\t\tObject.assign(workerData, {\n\t\t\tworker: getWebWorker(workerData.scripts[0], baseURL, workerData),\n\t\t\tinterface: {\n\t\t\t\trun: () => runWebWorker(workerData, { chunkSize })\n\t\t\t}\n\t\t});\n\t}\n\treturn workerData.interface;\n}\n\nasync function runWorker({ options, readable, writable, onTaskFinished }, config) {\n\tconst codecStream = new CodecStream(options, config);\n\ttry {\n\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\n\t\tconst {\n\t\t\tsignature,\n\t\t\tsize\n\t\t} = codecStream;\n\t\treturn {\n\t\t\tsignature,\n\t\t\tsize\n\t\t};\n\t} finally {\n\t\tonTaskFinished();\n\t}\n}\n\nasync function runWebWorker(workerData, config) {\n\tlet resolveResult, rejectResult;\n\tconst result = new Promise((resolve, reject) => {\n\t\tresolveResult = resolve;\n\t\trejectResult = reject;\n\t});\n\tObject.assign(workerData, {\n\t\treader: null,\n\t\twriter: null,\n\t\tresolveResult,\n\t\trejectResult,\n\t\tresult\n\t});\n\tconst { readable, options, scripts } = workerData;\n\tconst { writable, closed } = watchClosedStream(workerData.writable);\n\tconst streamsTransferred = sendMessage({\n\t\ttype: MESSAGE_START,\n\t\tscripts: scripts.slice(1),\n\t\toptions,\n\t\tconfig,\n\t\treadable,\n\t\twritable\n\t}, workerData);\n\tif (!streamsTransferred) {\n\t\tObject.assign(workerData, {\n\t\t\treader: readable.getReader(),\n\t\t\twriter: writable.getWriter()\n\t\t});\n\t}\n\tconst resultValue = await result;\n\ttry {\n\t\tawait writable.getWriter().close();\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tawait closed;\n\treturn resultValue;\n}\n\nfunction watchClosedStream(writableSource) {\n\tconst writer = writableSource.getWriter();\n\tlet resolveStreamClosed;\n\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\n\tconst writable = new WritableStream({\n\t\tasync write(chunk) {\n\t\t\tawait writer.ready;\n\t\t\tawait writer.write(chunk);\n\t\t},\n\t\tclose() {\n\t\t\twriter.releaseLock();\n\t\t\tresolveStreamClosed();\n\t\t},\n\t\tabort(reason) {\n\t\t\treturn writer.abort(reason);\n\t\t}\n\t});\n\treturn { writable, closed };\n}\n\nlet classicWorkersSupported = true;\nlet transferStreamsSupported = true;\n\nfunction getWebWorker(url, baseURL, workerData) {\n\tconst workerOptions = { type: \"module\" };\n\tlet scriptUrl, worker;\n\t// deno-lint-ignore valid-typeof\n\tif (typeof url == FUNCTION_TYPE) {\n\t\turl = url();\n\t}\n\ttry {\n\t\tscriptUrl = new URL(url, baseURL);\n\t} catch (_error) {\n\t\tscriptUrl = url;\n\t}\n\tif (classicWorkersSupported) {\n\t\ttry {\n\t\t\tworker = new Worker(scriptUrl);\n\t\t} catch (_error) {\n\t\t\tclassicWorkersSupported = false;\n\t\t\tworker = new Worker(scriptUrl, workerOptions);\n\t\t}\n\t} else {\n\t\tworker = new Worker(scriptUrl, workerOptions);\n\t}\n\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\n\treturn worker;\n}\n\nfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\n\ttry {\n\t\tlet { value, readable, writable } = message;\n\t\tconst transferables = [];\n\t\tif (value) {\n\t\t\tif (value.byteLength < value.buffer.byteLength) {\n\t\t\t\tmessage.value = value.buffer.slice(0, value.byteLength);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmessage.value = value.buffer;\n\t\t\t}\n\t\t\ttransferables.push(message.value);\n\t\t}\n\t\tif (transferStreams && transferStreamsSupported) {\n\t\t\tif (readable) {\n\t\t\t\ttransferables.push(readable);\n\t\t\t}\n\t\t\tif (writable) {\n\t\t\t\ttransferables.push(writable);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.readable = message.writable = null;\n\t\t}\n\t\tif (transferables.length) {\n\t\t\ttry {\n\t\t\t\tworker.postMessage(message, transferables);\n\t\t\t\treturn true;\n\t\t\t} catch (_error) {\n\t\t\t\ttransferStreamsSupported = false;\n\t\t\t\tmessage.readable = message.writable = null;\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} else {\n\t\t\tworker.postMessage(message);\n\t\t}\n\t} catch (error) {\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t\tthrow error;\n\t}\n}\n\nasync function onMessage({ data }, workerData) {\n\tconst { type, value, messageId, result, error } = data;\n\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\n\ttry {\n\t\tif (error) {\n\t\t\tconst { message, stack, code, name } = error;\n\t\t\tconst responseError = new Error(message);\n\t\t\tObject.assign(responseError, { stack, code, name });\n\t\t\tclose(responseError);\n\t\t} else {\n\t\t\tif (type == MESSAGE_PULL) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_DATA) {\n\t\t\t\tawait writer.ready;\n\t\t\t\tawait writer.write(new Uint8Array(value));\n\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_CLOSE) {\n\t\t\t\tclose(null, result);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tclose(error);\n\t}\n\n\tfunction close(error, result) {\n\t\tif (error) {\n\t\t\trejectResult(error);\n\t\t} else {\n\t\t\tresolveResult(result);\n\t\t}\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { UNDEFINED_VALUE } from \"./constants.js\";\nimport {\n\tCODEC_INFLATE,\n\tCODEC_DEFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./streams/codec-stream.js\";\nimport { CodecWorker } from \"./codec-worker.js\";\n\nlet pool = [];\nconst pendingRequests = [];\n\nexport {\n\trunWorker,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n};\n\nlet indexWorker = 0;\n\nasync function runWorker(stream, workerOptions) {\n\tconst { options, config } = workerOptions;\n\tconst { transferStreams, useWebWorkers, useCompressionStream, codecType, compressed, signed, encrypted } = options;\n\tconst { workerScripts, maxWorkers, terminateWorkerTimeout } = config;\n\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\n\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\n\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\n\tworkerOptions.scripts = workerOptions.useWebWorkers && workerScripts ? workerScripts[codecType] : [];\n\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\n\tlet worker;\n\tconst workerData = pool.find(workerData => !workerData.busy);\n\tif (workerData) {\n\t\tclearTerminateTimeout(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else if (pool.length < maxWorkers) {\n\t\tconst workerData = { indexWorker };\n\t\tindexWorker++;\n\t\tpool.push(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else {\n\t\tworker = await new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\n\t}\n\treturn worker.run();\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\n\t\t\t\tworkerData.terminateTimeout = setTimeout(() => {\n\t\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\t\tworkerData.terminate();\n\t\t\t\t}, terminateWorkerTimeout);\n\t\t\t}\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tconst { terminateTimeout } = workerData;\n\tif (terminateTimeout) {\n\t\tclearTimeout(terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nfunction terminateWorkers() {\n\tpool.forEach(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\tworkerData.terminate();\n\t});\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, atob, btoa, XMLHttpRequest, URL, fetch, ReadableStream, WritableStream, FileReader, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tUNDEFINED_VALUE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\nconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst PROPERTY_NAME_WRITABLE = \"writable\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n\n\tget readable() {\n\t\tconst reader = this;\n\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\n\t\tconst readable = new ReadableStream({\n\t\t\tstart() {\n\t\t\t\tthis.chunkOffset = 0;\n\t\t\t},\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\n\t\t\t\tconst { chunkOffset } = this;\n\t\t\t\tcontroller.enqueue(await readUint8Array(reader, offset + chunkOffset, Math.min(chunkSize, size - chunkOffset), diskNumberStart));\n\t\t\t\tif (chunkOffset + chunkSize > size) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.chunkOffset += chunkSize;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn readable;\n\t}\n}\n\nclass Writer extends Stream {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst writable = new WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\treturn writer.writeUint8Array(chunk);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteUint8Array() {\n\t\t// abstract\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\n\t\tObject.assign(this, {\n\t\t\tdataURI,\n\t\t\tdataStart,\n\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\n\t\t});\n\t}\n\n\treadUint8Array(offset, length) {\n\t\tconst {\n\t\t\tdataStart,\n\t\t\tdataURI\n\t\t} = this;\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t}\n\t\treturn dataArray;\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\n\t\t\tpending: []\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tlet indexArray = 0;\n\t\tlet dataString = writer.pending;\n\t\tconst delta = writer.pending.length;\n\t\twriter.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length > 2) {\n\t\t\twriter.data += btoa(dataString);\n\t\t} else {\n\t\t\twriter.pending = dataString;\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tblob,\n\t\t\tsize: blob.size\n\t\t});\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst reader = this;\n\t\tconst offsetEnd = offset + length;\n\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\n\t\tlet arrayBuffer = await blob.arrayBuffer();\n\t\tif (arrayBuffer.byteLength > length) {\n\t\t\tarrayBuffer = arrayBuffer.slice(offset, offsetEnd);\n\t\t}\n\t\treturn new Uint8Array(arrayBuffer);\n\t}\n}\n\nclass BlobWriter extends Stream {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst transformStream = new TransformStream();\n\t\tconst headers = [];\n\t\tif (contentType) {\n\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\n\t\t}\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn transformStream.writable;\n\t\t\t}\n\t\t});\n\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\n\t}\n\n\tgetData() {\n\t\treturn this.blob;\n\t}\n}\n\nclass TextReader extends BlobReader {\n\n\tconstructor(text) {\n\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n}\n\nclass TextWriter extends BlobWriter {\n\n\tconstructor(encoding) {\n\t\tsuper(encoding);\n\t\tObject.assign(this, {\n\t\t\tencoding,\n\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\n\t\t});\n\t}\n\n\tasync getData() {\n\t\tconst {\n\t\t\tencoding,\n\t\t\tutf8\n\t\t} = this;\n\t\tconst blob = await super.getData();\n\t\tif (blob.text && utf8) {\n\t\t\treturn blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tObject.assign(reader, {\n\t\t\t\t\tonload: ({ target }) => resolve(target.result),\n\t\t\t\t\tonerror: () => reject(reader.error)\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nfunction createHtpReader(httpReader, url, options) {\n\tconst {\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = options;\n\toptions = Object.assign({}, options);\n\tdelete options.preventHeadRequest;\n\tdelete options.useRangeHeader;\n\tdelete options.forceRangeRequests;\n\tdelete options.useXHR;\n\tObject.assign(httpReader, {\n\t\turl,\n\t\toptions,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t});\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tconst {\n\t\turl,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = httpReader;\n\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests)) {\n\t\tconst { headers } = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader));\n\t\tif (!forceRangeRequests && headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === UNDEFINED_VALUE) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tconst {\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\toptions\n\t} = httpReader;\n\tif (useRangeHeader || forceRangeRequests) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\tif (response.status != 206) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t}\n\t\treturn new Uint8Array(await response.arrayBuffer());\n\t} else {\n\t\tconst { data } = httpReader;\n\t\tif (!data) {\n\t\t\tawait getRequestData(httpReader, options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + index + \"-\" + (index + length - 1) });\n}\n\nfunction getHeaders({ options }) {\n\tconst { headers } = options;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail ? event.detail.error : new Error(\"Network error\")), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\turl,\n\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\n\t\t});\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tawait this.reader.init();\n\t\tsuper.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tarray,\n\t\t\tsize: array.length\n\t\t});\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tinit(initSize = 0) {\n\t\tObject.assign(this, {\n\t\t\toffset: 0,\n\t\t\tarray: new Uint8Array(initSize)\n\t\t});\n\t\tsuper.init();\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tif (writer.offset + array.length > writer.array.length) {\n\t\t\tconst previousArray = writer.array;\n\t\t\twriter.array = new Uint8Array(previousArray.length + array.length);\n\t\t\twriter.array.set(previousArray);\n\t\t}\n\t\twriter.array.set(array, writer.offset);\n\t\twriter.offset += array.length;\n\t}\n\n\tgetData() {\n\t\treturn this.array;\n\t}\n}\n\nclass SplitDataReader extends Reader {\n\n\tconstructor(readers) {\n\t\tsuper();\n\t\tthis.readers = readers;\n\t}\n\n\tasync init() {\n\t\tconst reader = this;\n\t\tconst { readers } = reader;\n\t\treader.lastDiskNumber = 0;\n\t\treader.lastDiskOffset = 0;\n\t\tawait Promise.all(readers.map(async (diskReader, indexDiskReader) => {\n\t\t\tawait diskReader.init();\n\t\t\tif (indexDiskReader != readers.length - 1) {\n\t\t\t\treader.lastDiskOffset += diskReader.size;\n\t\t\t}\n\t\t\treader.size += diskReader.size;\n\t\t}));\n\t\tsuper.init();\n\t}\n\n\tasync readUint8Array(offset, length, diskNumber = 0) {\n\t\tconst reader = this;\n\t\tconst { readers } = this;\n\t\tlet result;\n\t\tlet currentDiskNumber = diskNumber;\n\t\tif (currentDiskNumber == -1) {\n\t\t\tcurrentDiskNumber = readers.length - 1;\n\t\t}\n\t\tlet currentReaderOffset = offset;\n\t\twhile (currentReaderOffset >= readers[currentDiskNumber].size) {\n\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\n\t\t\tcurrentDiskNumber++;\n\t\t}\n\t\tconst currentReader = readers[currentDiskNumber];\n\t\tconst currentReaderSize = currentReader.size;\n\t\tif (currentReaderOffset + length <= currentReaderSize) {\n\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\n\t\t} else {\n\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\n\t\t\tresult = new Uint8Array(length);\n\t\t\tresult.set(await readUint8Array(currentReader, currentReaderOffset, chunkLength));\n\t\t\tresult.set(await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber), chunkLength);\n\t\t}\n\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\n\t\treturn result;\n\t}\n}\n\nclass SplitDataWriter extends Stream {\n\n\tconstructor(writerGenerator, maxSize = 4294967295) {\n\t\tsuper();\n\t\tconst zipWriter = this;\n\t\tObject.assign(zipWriter, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tsize: 0,\n\t\t\tmaxSize,\n\t\t\tavailableSize: maxSize\n\t\t});\n\t\tlet diskSourceWriter, diskWritable, diskWriter;\n\t\tconst writable = new WritableStream({\n\t\t\tasync write(chunk) {\n\t\t\t\tconst { availableSize } = zipWriter;\n\t\t\t\tif (!diskWriter) {\n\t\t\t\t\tconst { value, done } = await writerGenerator.next();\n\t\t\t\t\tif (done && !value) {\n\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiskSourceWriter = value;\n\t\t\t\t\t\tdiskSourceWriter.size = 0;\n\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\n\t\t\t\t\t\t\tzipWriter.maxSize = diskSourceWriter.maxSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tzipWriter.availableSize = zipWriter.maxSize;\n\t\t\t\t\t\tawait initStream(diskSourceWriter);\n\t\t\t\t\t\tdiskWritable = value.writable;\n\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.write(chunk);\n\t\t\t\t} else if (chunk.length >= availableSize) {\n\t\t\t\t\tawait writeChunk(chunk.slice(0, availableSize));\n\t\t\t\t\tawait closeDisk();\n\t\t\t\t\tzipWriter.diskOffset += diskSourceWriter.size;\n\t\t\t\t\tzipWriter.diskNumber++;\n\t\t\t\t\tdiskWriter = null;\n\t\t\t\t\tawait this.write(chunk.slice(availableSize));\n\t\t\t\t} else {\n\t\t\t\t\tawait writeChunk(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync close() {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait closeDisk();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(zipWriter, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\n\t\tasync function writeChunk(chunk) {\n\t\t\tconst chunkLength = chunk.length;\n\t\t\tif (chunkLength) {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait diskWriter.write(chunk);\n\t\t\t\tdiskSourceWriter.size += chunkLength;\n\t\t\t\tzipWriter.size += chunkLength;\n\t\t\t\tzipWriter.availableSize -= chunkLength;\n\t\t\t}\n\t\t}\n\n\t\tasync function closeDisk() {\n\t\t\tdiskWritable.size = diskSourceWriter.size;\n\t\t\tawait diskWriter.close();\n\t\t}\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tconst { baseURL } = getConfiguration();\n\tconst { protocol } = new URL(url, baseURL);\n\treturn protocol == \"http:\" || protocol == \"https:\";\n}\n\nasync function initStream(stream, initSize) {\n\tif (stream.init && !stream.initialized) {\n\t\tawait stream.init(initSize);\n\t}\n}\n\nfunction initReader(reader) {\n\tif (Array.isArray(reader)) {\n\t\treader = new SplitDataReader(reader);\n\t}\n\tif (reader instanceof ReadableStream) {\n\t\treader = {\n\t\t\treadable: reader\n\t\t};\n\t}\n\treturn reader;\n}\n\nfunction initWriter(writer) {\n\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE) {\n\t\twriter = new SplitDataWriter(writer);\n\t}\n\tif (writer instanceof WritableStream) {\n\t\twriter = {\n\t\t\twritable: writer\n\t\t};\n\t}\n\tconst { writable } = writer;\n\tif (writable.size === UNDEFINED_VALUE) {\n\t\twritable.size = 0;\n\t}\n\tconst splitZipFile = writer instanceof SplitDataWriter;\n\tif (!splitZipFile) {\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tavailableSize: Infinity,\n\t\t\tmaxSize: Infinity\n\t\t});\n\t}\n\treturn writer;\n}\n\nfunction readUint8Array(reader, offset, size, diskNumber) {\n\treturn reader.readUint8Array(offset, size, diskNumber);\n}\n\nconst SplitZipReader = SplitDataReader;\nconst SplitZipWriter = SplitDataWriter;\n\nexport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tSplitZipReader,\n\tSplitZipWriter,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nconst CP437 = \"\\0\u263A\u263B\u2665\u2666\u2663\u2660\u2022\u25D8\u25CB\u25D9\u2642\u2640\u266A\u266B\u263C\u25BA\u25C4\u2195\u203C\u00B6\u00A7\u25AC\u21A8\u2191\u2193\u2192\u2190\u221F\u2194\u25B2\u25BC !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0 \".split(\"\");\nconst VALID_CP437 = CP437.length == 256;\n\nexport {\n\tdecodeCP437\n};\n\nfunction decodeCP437(stringValue) {\n\tif (VALID_CP437) {\n\t\tlet result = \"\";\n\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\t\tresult += CP437[stringValue[indexCharacter]];\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextDecoder().decode(stringValue);\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nimport { decodeCP437 } from \"./cp437-decode.js\";\n\nexport {\n\tdecodeText\n};\n\nfunction decodeText(value, encoding) {\n\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\n\t\treturn decodeCP437(value);\n\t} else {\n\t\treturn new TextDecoder(encoding).decode(value);\n\t}\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAME_FILENAME = \"filename\";\nconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\nconst PROPERTY_NAME_COMMENT = \"comment\";\nconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\nconst PROPERTY_NAME_UNCOMPPRESSED_SIZE = \"uncompressedSize\";\nconst PROPERTY_NAME_COMPPRESSED_SIZE = \"compressedSize\";\nconst PROPERTY_NAME_OFFSET = \"offset\";\nconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\nconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\nconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\nconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\nconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\nconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\nconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\nconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE = \"internalFileAttribute\";\nconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE = \"externalFileAttribute\";\nconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\nconst PROPERTY_NAME_ZIP64 = \"zip64\";\n\nconst PROPERTY_NAMES = [\n\tPROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, PROPERTY_NAME_COMPPRESSED_SIZE, PROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE, PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_LAST_ACCESS_DATE, PROPERTY_NAME_CREATION_DATE, PROPERTY_NAME_OFFSET, PROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_DISK_NUMBER_START, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE, PROPERTY_NAME_ZIP64,\n\t\"directory\", \"bitFlag\", \"encrypted\", \"signature\", \"filenameUTF8\", \"commentUTF8\", \"compressionMethod\", \"version\", \"versionMadeBy\",\n\t\"extraField\", \"rawExtraField\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\", \"extraFieldAES\", \"extraFieldNTFS\",\n\t\"extraFieldExtendedTimestamp\"];\n\nclass Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}\n\nexport {\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n};", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt, Response, WritableStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tDIRECTORY_SIGNATURE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\trunWorker,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_ABORT_CHECK_PASSWORD\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tBlobReader\n} from \"./io.js\";\nimport { decodeText } from \"./util/decode-text.js\";\nimport { Crc32 } from \"./streams/codecs/crc32.js\";\nimport {\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_BAD_FORMAT = \"File format is not recognized\";\nconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\nconst ERR_EOCDR_ZIP64_NOT_FOUND = \"End of Zip64 central directory not found\";\nconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\nconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\nconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\nconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\nconst ERR_ENCRYPTED = \"File contains encrypted entry\";\nconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\nconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\nconst ERR_SPLIT_ZIP_FILE = \"Split zip file\";\nconst CHARSET_UTF8 = \"utf-8\";\nconst CHARSET_CP437 = \"cp437\";\nconst ZIP64_PROPERTIES = [\n\t[PROPERTY_NAME_UNCOMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_COMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_OFFSET, MAX_32_BITS],\n\t[PROPERTY_NAME_DISK_NUMBER_START, MAX_16_BITS]\n];\nconst ZIP64_EXTRACTION = {\n\t[MAX_16_BITS]: {\n\t\tgetValue: getUint32,\n\t\tbytes: 4\n\t},\n\t[MAX_32_BITS]: {\n\t\tgetValue: getBigUint64,\n\t\tbytes: 8\n\t}\n};\n\nclass ZipReader {\n\n\tconstructor(reader, options = {}) {\n\t\tObject.assign(this, {\n\t\t\treader: initReader(reader),\n\t\t\toptions,\n\t\t\tconfig: getConfiguration()\n\t\t});\n\t}\n\n\tasync* getEntriesGenerator(options = {}) {\n\t\tconst zipReader = this;\n\t\tlet { reader } = zipReader;\n\t\tconst { config } = zipReader;\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE || !reader.readUint8Array) {\n\t\t\treader = new BlobReader(await new Response(reader.readable).blob());\n\t\t\tawait initStream(reader);\n\t\t}\n\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\treader.chunkSize = getChunkSize(config);\n\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\n\t\tif (!endOfDirectoryInfo) {\n\t\t\tconst signatureArray = await readUint8Array(reader, 0, 4);\n\t\t\tconst signatureView = getDataView(signatureArray);\n\t\t\tif (getUint32(signatureView) == SPLIT_ZIP_FILE_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t\t} else {\n\t\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\n\t\t\t}\n\t\t}\n\t\tconst endOfDirectoryView = getDataView(endOfDirectoryInfo);\n\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\n\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\n\t\tconst commentOffset = endOfDirectoryInfo.offset;\n\t\tconst commentLength = getUint16(endOfDirectoryView, 20);\n\t\tconst appendedDataOffset = commentOffset + END_OF_CENTRAL_DIR_LENGTH + commentLength;\n\t\tlet lastDiskNumber = getUint16(endOfDirectoryView, 4);\n\t\tconst expectedLastDiskNumber = reader.lastDiskNumber || 0;\n\t\tlet diskNumber = getUint16(endOfDirectoryView, 6);\n\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\n\t\tlet prependedDataLength = 0;\n\t\tlet startOffset = 0;\n\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS || diskNumber == MAX_16_BITS) {\n\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\n\t\t\tconst endOfDirectoryLocatorView = getDataView(endOfDirectoryLocatorArray);\n\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) != ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\n\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\tlet endOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\t\tendOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t}\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tif (lastDiskNumber == MAX_16_BITS) {\n\t\t\t\tlastDiskNumber = getUint32(endOfDirectoryView, 16);\n\t\t\t}\n\t\t\tif (diskNumber == MAX_16_BITS) {\n\t\t\t\tdiskNumber = getUint32(endOfDirectoryView, 20);\n\t\t\t}\n\t\t\tif (filesLength == MAX_16_BITS) {\n\t\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\n\t\t\t}\n\t\t\tif (directoryDataLength == MAX_32_BITS) {\n\t\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\n\t\t\t}\n\t\t\tdirectoryDataOffset -= directoryDataLength;\n\t\t}\n\t\tif (directoryDataOffset >= reader.size) {\n\t\t\tprependedDataLength = reader.size - directoryDataOffset - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tdirectoryDataOffset = reader.size - directoryDataLength - END_OF_CENTRAL_DIR_LENGTH;\t\n\t\t}\n\t\tif (expectedLastDiskNumber != lastDiskNumber) {\n\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t}\n\t\tif (directoryDataOffset < 0) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tlet offset = 0;\n\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\tlet directoryView = getDataView(directoryArray);\n\t\tif (directoryDataLength) {\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength += directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t\t}\n\t\t}\n\t\tconst expectedDirectoryDataLength = endOfDirectoryInfo.offset - directoryDataOffset - (reader.lastDiskOffset || 0);\n\t\tif (directoryDataLength != expectedDirectoryDataLength && expectedDirectoryDataLength >= 0) {\n\t\t\tdirectoryDataLength = expectedDirectoryDataLength;\n\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst filenameEncoding = getOptionValue(zipReader, options, \"filenameEncoding\");\n\t\tconst commentEncoding = getOptionValue(zipReader, options, \"commentEncoding\");\n\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\n\t\t\tconst fileEntry = new ZipEntry(reader, config, zipReader.options);\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\n\t\t\t}\n\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\n\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\n\t\t\tconst filenameOffset = offset + 46;\n\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\n\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\n\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\n\t\t\tconst msDosCompatible = (versionMadeBy & 0) == 0;\n\t\t\tconst rawFilename = directoryArray.subarray(filenameOffset, extraFieldOffset);\n\t\t\tconst commentLength = getUint16(directoryView, offset + 32);\n\t\t\tconst endOffset = commentOffset + commentLength;\n\t\t\tconst rawComment = directoryArray.subarray(commentOffset, endOffset);\n\t\t\tconst filenameUTF8 = languageEncodingFlag;\n\t\t\tconst commentUTF8 = languageEncodingFlag;\n\t\t\tconst directory = msDosCompatible && ((getUint8(directoryView, offset + 38) & FILE_ATTR_MSDOS_DIR_MASK) == FILE_ATTR_MSDOS_DIR_MASK);\n\t\t\tconst offsetFileEntry = getUint32(directoryView, offset + 42) + prependedDataLength;\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tversionMadeBy,\n\t\t\t\tmsDosCompatible,\n\t\t\t\tcompressedSize: 0,\n\t\t\t\tuncompressedSize: 0,\n\t\t\t\tcommentLength,\n\t\t\t\tdirectory,\n\t\t\t\toffset: offsetFileEntry,\n\t\t\t\tdiskNumberStart: getUint16(directoryView, offset + 34),\n\t\t\t\tinternalFileAttribute: getUint16(directoryView, offset + 36),\n\t\t\t\texternalFileAttribute: getUint32(directoryView, offset + 38),\n\t\t\t\trawFilename,\n\t\t\t\tfilenameUTF8,\n\t\t\t\tcommentUTF8,\n\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset)\n\t\t\t});\n\t\t\tconst [filename, comment] = await Promise.all([\n\t\t\t\tdecodeText(rawFilename, filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437),\n\t\t\t\tdecodeText(rawComment, commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437)\n\t\t\t]);\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\trawComment,\n\t\t\t\tfilename,\n\t\t\t\tcomment,\n\t\t\t\tdirectory: directory || filename.endsWith(DIRECTORY_SIGNATURE)\n\t\t\t});\n\t\t\tstartOffset = Math.max(offsetFileEntry, startOffset);\n\t\t\tawait readCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\n\t\t\tconst entry = new Entry(fileEntry);\n\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, options);\n\t\t\toffset = endOffset;\n\t\t\tconst { onprogress } = options;\n\t\t\tif (onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield entry;\n\t\t}\n\t\tconst extractPrependedData = getOptionValue(zipReader, options, \"extractPrependedData\");\n\t\tconst extractAppendedData = getOptionValue(zipReader, options, \"extractAppendedData\");\n\t\tif (extractPrependedData) {\n\t\t\tzipReader.prependedData = startOffset > 0 ? await readUint8Array(reader, 0, startOffset) : new Uint8Array();\n\t\t}\n\t\tzipReader.comment = commentLength ? await readUint8Array(reader, commentOffset + END_OF_CENTRAL_DIR_LENGTH, commentLength) : new Uint8Array();\n\t\tif (extractAppendedData) {\n\t\t\tzipReader.appendedData = appendedDataOffset < reader.size ? await readUint8Array(reader, appendedDataOffset, reader.size - appendedDataOffset) : new Uint8Array();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync getEntries(options = {}) {\n\t\tconst entries = [];\n\t\tfor await (const entry of this.getEntriesGenerator(options)) {\n\t\t\tentries.push(entry);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tasync close() {\n\t}\n}\n\nexport {\n\tZipReader,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_SPLIT_ZIP_FILE\n};\n\nclass ZipEntry {\n\n\tconstructor(reader, config, options) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\tconfig,\n\t\t\toptions\n\t\t});\n\t}\n\n\tasync getData(writer, fileEntry, options = {}) {\n\t\tconst zipEntry = this;\n\t\tconst {\n\t\t\treader,\n\t\t\toffset,\n\t\t\tdiskNumberStart,\n\t\t\textraFieldAES,\n\t\t\tcompressionMethod,\n\t\t\tconfig,\n\t\t\tbitFlag,\n\t\t\tsignature,\n\t\t\trawLastModDate,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = zipEntry;\n\t\tconst localDirectory = fileEntry.localDirectory = {};\n\t\tconst dataArray = await readUint8Array(reader, offset, 30, diskNumberStart);\n\t\tconst dataView = getDataView(dataArray);\n\t\tlet password = getOptionValue(zipEntry, options, \"password\");\n\t\tpassword = password && password.length && password;\n\t\tif (extraFieldAES) {\n\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t\t}\n\t\t}\n\t\tif (compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t}\n\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\n\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\n\t\t}\n\t\treadCommonHeader(localDirectory, dataView, 4);\n\t\tlocalDirectory.rawExtraField = localDirectory.extraFieldLength ?\n\t\t\tawait readUint8Array(reader, offset + 30 + localDirectory.filenameLength, localDirectory.extraFieldLength, diskNumberStart) :\n\t\t\tnew Uint8Array();\n\t\tawait readCommonFooter(zipEntry, localDirectory, dataView, 4, true);\n\t\tObject.assign(fileEntry, {\n\t\t\tlastAccessDate: localDirectory.lastAccessDate,\n\t\t\tcreationDate: localDirectory.creationDate\n\t\t});\n\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted;\n\t\tconst zipCrypto = encrypted && !extraFieldAES;\n\t\tif (encrypted) {\n\t\t\tif (!zipCrypto && extraFieldAES.strength === UNDEFINED_VALUE) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\n\t\t\t} else if (!password) {\n\t\t\t\tthrow new Error(ERR_ENCRYPTED);\n\t\t\t}\n\t\t}\n\t\tconst dataOffset = offset + 30 + localDirectory.filenameLength + localDirectory.extraFieldLength;\n\t\tconst size = compressedSize;\n\t\tconst readable = reader.readable;\n\t\tObject.assign(readable, {\n\t\t\tdiskNumberStart,\n\t\t\toffset: dataOffset,\n\t\t\tsize\n\t\t});\n\t\tconst signal = getOptionValue(zipEntry, options, \"signal\");\n\t\tconst checkPasswordOnly = getOptionValue(zipEntry, options, \"checkPasswordOnly\");\n\t\tif (checkPasswordOnly) {\n\t\t\twriter = new WritableStream();\n\t\t}\n\t\twriter = initWriter(writer);\n\t\tawait initStream(writer, uncompressedSize);\n\t\tconst { writable } = writer;\n\t\tconst { onstart, onprogress, onend } = options;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_INFLATE,\n\t\t\t\tpassword,\n\t\t\t\tzipCrypto,\n\t\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\n\t\t\t\tsigned: getOptionValue(zipEntry, options, \"checkSignature\"),\n\t\t\t\tpasswordVerification: zipCrypto && (bitFlag.dataDescriptor ? ((rawLastModDate >>> 8) & 0xFF) : ((signature >>> 24) & 0xFF)),\n\t\t\t\tsignature,\n\t\t\t\tcompressed: compressionMethod != 0,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers: getOptionValue(zipEntry, options, \"useWebWorkers\"),\n\t\t\t\tuseCompressionStream: getOptionValue(zipEntry, options, \"useCompressionStream\"),\n\t\t\t\ttransferStreams: getOptionValue(zipEntry, options, \"transferStreams\"),\n\t\t\t\tcheckPasswordOnly\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tlet outputSize = 0;\n\t\ttry {\n\t\t\t({ outputSize } = (await runWorker({ readable, writable }, workerOptions)));\n\t\t} catch (error) {\n\t\t\tif (!checkPasswordOnly || error.message != ERR_ABORT_CHECK_PASSWORD) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} finally {\n\t\t\tconst preventClose = getOptionValue(zipEntry, options, \"preventClose\");\n\t\t\twritable.size += outputSize;\n\t\t\tif (!preventClose && !writable.locked) {\n\t\t\t\tawait writable.getWriter().close();\n\t\t\t}\n\t\t}\n\t\treturn checkPasswordOnly ? undefined : writer.getData ? writer.getData() : writable;\n\t}\n}\n\nfunction readCommonHeader(directory, dataView, offset) {\n\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\n\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\n\tconst rawLastModDate = getUint32(dataView, offset + 6);\n\tObject.assign(directory, {\n\t\tencrypted,\n\t\tversion: getUint16(dataView, offset),\n\t\tbitFlag: {\n\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\n\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\n\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\n\t\t},\n\t\trawLastModDate,\n\t\tlastModDate: getDate(rawLastModDate),\n\t\tfilenameLength: getUint16(dataView, offset + 22),\n\t\textraFieldLength: getUint16(dataView, offset + 24)\n\t});\n}\n\nasync function readCommonFooter(fileEntry, directory, dataView, offset, localDirectory) {\n\tconst { rawExtraField } = directory;\n\tconst extraField = directory.extraField = new Map();\n\tconst rawExtraFieldView = getDataView(new Uint8Array(rawExtraField));\n\tlet offsetExtraField = 0;\n\ttry {\n\t\twhile (offsetExtraField < rawExtraField.length) {\n\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\n\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\n\t\t\textraField.set(type, {\n\t\t\t\ttype,\n\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\n\t\t\t});\n\t\t\toffsetExtraField += 4 + size;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tconst compressionMethod = getUint16(dataView, offset + 4);\n\tObject.assign(directory, {\n\t\tsignature: getUint32(dataView, offset + 10),\n\t\tuncompressedSize: getUint32(dataView, offset + 18),\n\t\tcompressedSize: getUint32(dataView, offset + 14)\n\t});\n\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\n\tif (extraFieldZip64) {\n\t\treadExtraFieldZip64(extraFieldZip64, directory);\n\t\tdirectory.extraFieldZip64 = extraFieldZip64;\n\t}\n\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\n\tif (extraFieldUnicodePath) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodePath, PROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\n\t}\n\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\n\tif (extraFieldUnicodeComment) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodeComment, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\n\t}\n\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\n\tif (extraFieldAES) {\n\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\n\t\tdirectory.extraFieldAES = extraFieldAES;\n\t} else {\n\t\tdirectory.compressionMethod = compressionMethod;\n\t}\n\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\n\tif (extraFieldNTFS) {\n\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\n\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\n\t}\n\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\tif (extraFieldExtendedTimestamp) {\n\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory);\n\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\n\t}\n\tconst extraFieldUSDZ = extraField.get(EXTRAFIELD_TYPE_USDZ);\n\tif (extraFieldUSDZ) {\n\t\tdirectory.extraFieldUSDZ = extraFieldUSDZ;\n\t}\n}\n\nfunction readExtraFieldZip64(extraFieldZip64, directory) {\n\tdirectory.zip64 = true;\n\tconst extraFieldView = getDataView(extraFieldZip64.data);\n\tconst missingProperties = ZIP64_PROPERTIES.filter(([propertyName, max]) => directory[propertyName] == max);\n\tfor (let indexMissingProperty = 0, offset = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\n\t\tconst [propertyName, max] = missingProperties[indexMissingProperty];\n\t\tif (directory[propertyName] == max) {\n\t\t\tconst extraction = ZIP64_EXTRACTION[max];\n\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName] = extraction.getValue(extraFieldView, offset);\n\t\t\toffset += extraction.bytes;\n\t\t} else if (extraFieldZip64[propertyName]) {\n\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\n\t\t}\n\t}\n}\n\nasync function readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\n\tconst extraFieldView = getDataView(extraFieldUnicode.data);\n\tconst crc32 = new Crc32();\n\tcrc32.append(fileEntry[rawPropertyName]);\n\tconst dataViewSignature = getDataView(new Uint8Array(4));\n\tdataViewSignature.setUint32(0, crc32.get(), true);\n\tconst signature = getUint32(extraFieldView, 1);\n\tObject.assign(extraFieldUnicode, {\n\t\tversion: getUint8(extraFieldView, 0),\n\t\t[propertyName]: decodeText(extraFieldUnicode.data.subarray(5)),\n\t\tvalid: !fileEntry.bitFlag.languageEncodingFlag && signature == getUint32(dataViewSignature, 0)\n\t});\n\tif (extraFieldUnicode.valid) {\n\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\n\t\tdirectory[propertyName + \"UTF8\"] = true;\n\t}\n}\n\nfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\n\tconst extraFieldView = getDataView(extraFieldAES.data);\n\tconst strength = getUint8(extraFieldView, 4);\n\tObject.assign(extraFieldAES, {\n\t\tvendorVersion: getUint8(extraFieldView, 0),\n\t\tvendorId: getUint8(extraFieldView, 2),\n\t\tstrength,\n\t\toriginalCompressionMethod: compressionMethod,\n\t\tcompressionMethod: getUint16(extraFieldView, 5)\n\t});\n\tdirectory.compressionMethod = extraFieldAES.compressionMethod;\n}\n\nfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\n\tconst extraFieldView = getDataView(extraFieldNTFS.data);\n\tlet offsetExtraField = 4;\n\tlet tag1Data;\n\ttry {\n\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\n\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\n\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\n\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\n\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\n\t\t\t}\n\t\t\toffsetExtraField += 4 + attributeSize;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\ttry {\n\t\tif (tag1Data && tag1Data.length == 24) {\n\t\t\tconst tag1View = getDataView(tag1Data);\n\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\n\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\n\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\n\t\t\tObject.assign(extraFieldNTFS, {\n\t\t\t\trawLastModDate,\n\t\t\t\trawLastAccessDate,\n\t\t\t\trawCreationDate\n\t\t\t});\n\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\n\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\n\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\n\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\n\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\n\t\t\tObject.assign(directory, extraFieldData);\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory, localDirectory) {\n\tconst extraFieldView = getDataView(extraFieldExtendedTimestamp.data);\n\tconst flags = getUint8(extraFieldView, 0);\n\tconst timeProperties = [];\n\tconst timeRawProperties = [];\n\tif (localDirectory) {\n\t\tif ((flags & 0x1) == 0x1) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t\t}\n\t\tif ((flags & 0x2) == 0x2) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE);\n\t\t}\n\t\tif ((flags & 0x4) == 0x4) {\n\t\t\ttimeProperties.push(PROPERTY_NAME_CREATION_DATE);\n\t\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE);\n\t\t}\n\t} else if (extraFieldExtendedTimestamp.data.length >= 5) {\n\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t}\n\tlet offset = 1;\n\ttimeProperties.forEach((propertyName, indexProperty) => {\n\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\n\t\t\tconst time = getUint32(extraFieldView, offset);\n\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\n\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\n\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\n\t\t}\n\t\toffset += 4;\n\t});\n}\n\nasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\n\tconst signatureArray = new Uint8Array(4);\n\tconst signatureView = getDataView(signatureArray);\n\tsetUint32(signatureView, 0, signature);\n\tconst maximumBytes = minimumBytes + maximumLength;\n\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\n\n\tasync function seek(length) {\n\t\tconst offset = startOffset - length;\n\t\tconst bytes = await readUint8Array(reader, offset, length);\n\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\n\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\n\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\n\t\t\t\treturn {\n\t\t\t\t\toffset: offset + indexByte,\n\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getOptionValue(zipReader, options, name) {\n\treturn options[name] === UNDEFINED_VALUE ? zipReader.options[name] : options[name];\n}\n\nfunction getDate(timeRaw) {\n\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\n\ttry {\n\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction getDateNTFS(timeRaw) {\n\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\n}\n\nfunction getUint8(view, offset) {\n\treturn view.getUint8(offset);\n}\n\nfunction getUint16(view, offset) {\n\treturn view.getUint16(offset, true);\n}\n\nfunction getUint32(view, offset) {\n\treturn view.getUint32(offset, true);\n}\n\nfunction getBigUint64(view, offset) {\n\treturn Number(view.getBigUint64(offset, true));\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_USDZ,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\tCODEC_DEFLATE,\n\trunWorker\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\tBlobWriter,\n\tSplitDataWriter\n} from \"./io.js\";\nimport { encodeText } from \"./util/encode-text.js\";\nimport {\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_DUPLICATED_NAME = \"File already exists\";\nconst ERR_INVALID_COMMENT = \"Zip file comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_COMMENT = \"File entry comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_NAME = \"File entry name exceeds 64KB\";\nconst ERR_INVALID_VERSION = \"Version exceeds 65535\";\nconst ERR_INVALID_ENCRYPTION_STRENGTH = \"The strength must equal 1, 2, or 3\";\nconst ERR_INVALID_EXTRAFIELD_TYPE = \"Extra field type exceeds 65535\";\nconst ERR_INVALID_EXTRAFIELD_DATA = \"Extra field data exceeds 64KB\";\nconst ERR_UNSUPPORTED_FORMAT = \"Zip64 is not supported (make sure 'keepOrder' is set to 'true')\";\n\nconst EXTRAFIELD_DATA_AES = new Uint8Array([0x07, 0x00, 0x02, 0x00, 0x41, 0x45, 0x03, 0x00, 0x00]);\n\nlet workers = 0;\nconst pendingEntries = [];\n\nclass ZipWriter {\n\n\tconstructor(writer, options = {}) {\n\t\twriter = initWriter(writer);\n\t\tObject.assign(this, {\n\t\t\twriter,\n\t\t\taddSplitZipSignature: writer instanceof SplitDataWriter,\n\t\t\toptions,\n\t\t\tconfig: getConfiguration(),\n\t\t\tfiles: new Map(),\n\t\t\tfilenames: new Set(),\n\t\t\toffset: writer.writable.size,\n\t\t\tpendingEntriesSize: 0,\n\t\t\tpendingAddFileCalls: new Set(),\n\t\t\tbufferedWrites: 0\n\t\t});\n\t}\n\n\tasync add(name = \"\", reader, options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst {\n\t\t\tpendingAddFileCalls,\n\t\t\tconfig\n\t\t} = zipWriter;\n\t\tif (workers < config.maxWorkers) {\n\t\t\tworkers++;\n\t\t} else {\n\t\t\tawait new Promise(resolve => pendingEntries.push(resolve));\n\t\t}\n\t\tlet promiseAddFile;\n\t\ttry {\n\t\t\tname = name.trim();\n\t\t\tif (zipWriter.filenames.has(name)) {\n\t\t\t\tthrow new Error(ERR_DUPLICATED_NAME);\n\t\t\t}\n\t\t\tzipWriter.filenames.add(name);\n\t\t\tpromiseAddFile = addFile(zipWriter, name, reader, options);\n\t\t\tpendingAddFileCalls.add(promiseAddFile);\n\t\t\treturn await promiseAddFile;\n\t\t} catch (error) {\n\t\t\tzipWriter.filenames.delete(name);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tpendingAddFileCalls.delete(promiseAddFile);\n\t\t\tconst pendingEntry = pendingEntries.shift();\n\t\t\tif (pendingEntry) {\n\t\t\t\tpendingEntry();\n\t\t\t} else {\n\t\t\t\tworkers--;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(comment = new Uint8Array(), options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst { pendingAddFileCalls, writer } = this;\n\t\tconst { writable } = writer;\n\t\twhile (pendingAddFileCalls.size) {\n\t\t\tawait Promise.all(Array.from(pendingAddFileCalls));\n\t\t}\n\t\tawait closeFile(this, comment, options);\n\t\tconst preventClose = getOptionValue(zipWriter, options, \"preventClose\");\n\t\tif (!preventClose) {\n\t\t\tawait writable.getWriter().close();\n\t\t}\n\t\treturn writer.getData ? writer.getData() : writable;\n\t}\n}\n\nexport {\n\tZipWriter,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT\n};\n\nasync function addFile(zipWriter, name, reader, options) {\n\tname = name.trim();\n\tif (options.directory && (!name.endsWith(DIRECTORY_SIGNATURE))) {\n\t\tname += DIRECTORY_SIGNATURE;\n\t} else {\n\t\toptions.directory = name.endsWith(DIRECTORY_SIGNATURE);\n\t}\n\tconst rawFilename = encodeText(name);\n\tif (getLength(rawFilename) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_NAME);\n\t}\n\tconst comment = options.comment || \"\";\n\tconst rawComment = encodeText(comment);\n\tif (getLength(rawComment) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_COMMENT);\n\t}\n\tconst version = getOptionValue(zipWriter, options, \"version\", VERSION_DEFLATE);\n\tif (version > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst versionMadeBy = getOptionValue(zipWriter, options, \"versionMadeBy\", 20);\n\tif (versionMadeBy > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst lastModDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_MODIFICATION_DATE, new Date());\n\tconst lastAccessDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_ACCESS_DATE);\n\tconst creationDate = getOptionValue(zipWriter, options, PROPERTY_NAME_CREATION_DATE);\n\tconst msDosCompatible = getOptionValue(zipWriter, options, PROPERTY_NAME_MS_DOS_COMPATIBLE, true);\n\tconst internalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, 0);\n\tconst externalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE, 0);\n\tconst password = getOptionValue(zipWriter, options, \"password\");\n\tconst encryptionStrength = getOptionValue(zipWriter, options, \"encryptionStrength\", 3);\n\tconst zipCrypto = getOptionValue(zipWriter, options, \"zipCrypto\");\n\tconst extendedTimestamp = getOptionValue(zipWriter, options, \"extendedTimestamp\", true);\n\tconst keepOrder = getOptionValue(zipWriter, options, \"keepOrder\", true);\n\tconst level = getOptionValue(zipWriter, options, \"level\");\n\tconst useWebWorkers = getOptionValue(zipWriter, options, \"useWebWorkers\");\n\tconst bufferedWrite = getOptionValue(zipWriter, options, \"bufferedWrite\");\n\tconst dataDescriptorSignature = getOptionValue(zipWriter, options, \"dataDescriptorSignature\", false);\n\tconst signal = getOptionValue(zipWriter, options, \"signal\");\n\tconst useCompressionStream = getOptionValue(zipWriter, options, \"useCompressionStream\");\n\tlet dataDescriptor = getOptionValue(zipWriter, options, \"dataDescriptor\", true);\n\tlet zip64 = getOptionValue(zipWriter, options, PROPERTY_NAME_ZIP64);\n\tif (password !== UNDEFINED_VALUE && encryptionStrength !== UNDEFINED_VALUE && (encryptionStrength < 1 || encryptionStrength > 3)) {\n\t\tthrow new Error(ERR_INVALID_ENCRYPTION_STRENGTH);\n\t}\n\tlet rawExtraField = new Uint8Array();\n\tconst { extraField } = options;\n\tif (extraField) {\n\t\tlet extraFieldSize = 0;\n\t\tlet offset = 0;\n\t\textraField.forEach(data => extraFieldSize += 4 + getLength(data));\n\t\trawExtraField = new Uint8Array(extraFieldSize);\n\t\textraField.forEach((data, type) => {\n\t\t\tif (type > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_TYPE);\n\t\t\t}\n\t\t\tif (getLength(data) > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_DATA);\n\t\t\t}\n\t\t\tarraySet(rawExtraField, new Uint16Array([type]), offset);\n\t\t\tarraySet(rawExtraField, new Uint16Array([getLength(data)]), offset + 2);\n\t\t\tarraySet(rawExtraField, data, offset + 4);\n\t\t\toffset += 4 + getLength(data);\n\t\t});\n\t}\n\tlet maximumCompressedSize = 0;\n\tlet maximumEntrySize = 0;\n\tlet uncompressedSize = 0;\n\tconst zip64Enabled = zip64 === true;\n\tif (reader) {\n\t\treader = initReader(reader);\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE) {\n\t\t\tdataDescriptor = true;\n\t\t\tif (zip64 || zip64 === UNDEFINED_VALUE) {\n\t\t\t\tzip64 = true;\n\t\t\t\tuncompressedSize = maximumCompressedSize = MAX_32_BITS;\n\t\t\t}\n\t\t} else {\n\t\t\tuncompressedSize = reader.size;\n\t\t\tmaximumCompressedSize = getMaximumCompressedSize(uncompressedSize);\n\t\t}\n\t}\n\tconst { diskOffset, diskNumber, maxSize } = zipWriter.writer;\n\tconst zip64UncompressedSize = zip64Enabled || uncompressedSize >= MAX_32_BITS;\n\tconst zip64CompressedSize = zip64Enabled || maximumCompressedSize >= MAX_32_BITS;\n\tconst zip64Offset = zip64Enabled || zipWriter.offset + zipWriter.pendingEntriesSize - diskOffset >= MAX_32_BITS;\n\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\tconst zip64DiskNumberStart = (supportZip64SplitFile && zip64Enabled) || diskNumber + Math.ceil(zipWriter.pendingEntriesSize / maxSize) >= MAX_16_BITS;\n\tif (zip64Offset || zip64UncompressedSize || zip64CompressedSize || zip64DiskNumberStart) {\n\t\tif (zip64 === false || !keepOrder) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tzip64 = zip64 || false;\n\toptions = Object.assign({}, options, {\n\t\trawFilename,\n\t\trawComment,\n\t\tversion,\n\t\tversionMadeBy,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\trawExtraField,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tpassword,\n\t\tlevel,\n\t\tuseWebWorkers,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tzipCrypto,\n\t\tbufferedWrite,\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature,\n\t\tsignal,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t});\n\tconst headerInfo = getHeaderInfo(options);\n\tconst dataDescriptorInfo = getDataDescriptorInfo(options);\n\tconst metadataSize = getLength(headerInfo.localHeaderArray, dataDescriptorInfo.dataDescriptorArray);\n\tmaximumEntrySize = metadataSize + maximumCompressedSize;\n\tif (zipWriter.options.usdz) {\n\t\tmaximumEntrySize += maximumEntrySize + 64;\n\t}\n\tzipWriter.pendingEntriesSize += maximumEntrySize;\n\tlet fileEntry;\n\ttry {\n\t\tfileEntry = await getFileEntry(zipWriter, name, reader, { headerInfo, dataDescriptorInfo, metadataSize }, options);\n\t} finally {\n\t\tzipWriter.pendingEntriesSize -= maximumEntrySize;\n\t}\n\tObject.assign(fileEntry, { name, comment, extraField });\n\treturn new Entry(fileEntry);\n}\n\nasync function getFileEntry(zipWriter, name, reader, entryInfo, options) {\n\tconst {\n\t\tfiles,\n\t\twriter\n\t} = zipWriter;\n\tconst {\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tsignal\n\t} = options;\n\tconst {\n\t\theaderInfo\n\t} = entryInfo;\n\tconst { usdz } = zipWriter.options;\n\tconst previousFileEntry = Array.from(files.values()).pop();\n\tlet fileEntry = {};\n\tlet bufferedWrite;\n\tlet releaseLockWriter;\n\tlet releaseLockCurrentFileEntry;\n\tlet writingBufferedEntryData;\n\tlet writingEntryData;\n\tlet fileWriter;\n\tfiles.set(name, fileEntry);\n\ttry {\n\t\tlet lockPreviousFileEntry;\n\t\tif (keepOrder) {\n\t\t\tlockPreviousFileEntry = previousFileEntry && previousFileEntry.lock;\n\t\t\trequestLockCurrentFileEntry();\n\t\t}\n\t\tif ((options.bufferedWrite || zipWriter.writerLocked || (zipWriter.bufferedWrites && keepOrder) || !dataDescriptor) && !usdz) {\n\t\t\tfileWriter = new BlobWriter();\n\t\t\tfileWriter.writable.size = 0;\n\t\t\tbufferedWrite = true;\n\t\t\tzipWriter.bufferedWrites++;\n\t\t\tawait initStream(writer);\n\t\t} else {\n\t\t\tfileWriter = writer;\n\t\t\tawait requestLockWriter();\n\t\t}\n\t\tawait initStream(fileWriter);\n\t\tconst { writable } = writer;\n\t\tlet { diskOffset } = writer;\n\t\tif (zipWriter.addSplitZipSignature) {\n\t\t\tdelete zipWriter.addSplitZipSignature;\n\t\t\tconst signatureArray = new Uint8Array(4);\n\t\t\tconst signatureArrayView = getDataView(signatureArray);\n\t\t\tsetUint32(signatureArrayView, 0, SPLIT_ZIP_FILE_SIGNATURE);\n\t\t\tawait writeData(writable, signatureArray);\n\t\t\tzipWriter.offset += 4;\n\t\t}\n\t\tif (usdz) {\n\t\t\tappendExtraFieldUSDZ(entryInfo, zipWriter.offset - diskOffset);\n\t\t}\n\t\tif (!bufferedWrite) {\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t}\n\t\tconst { diskNumber } = writer;\n\t\twritingEntryData = true;\n\t\tfileEntry.diskNumberStart = diskNumber;\n\t\tfileEntry = await createFileEntry(reader, fileWriter, fileEntry, entryInfo, zipWriter.config, options);\n\t\twritingEntryData = false;\n\t\tfiles.set(name, fileEntry);\n\t\tfileEntry.filename = name;\n\t\tif (bufferedWrite) {\n\t\t\tawait fileWriter.writable.getWriter().close();\n\t\t\tlet blob = await fileWriter.getData();\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait requestLockWriter();\n\t\t\twritingBufferedEntryData = true;\n\t\t\tif (!dataDescriptor) {\n\t\t\t\tblob = await writeExtraHeaderInfo(fileEntry, blob, writable, options);\n\t\t\t}\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t\tfileEntry.diskNumberStart = writer.diskNumber;\n\t\t\tdiskOffset = writer.diskOffset;\n\t\t\tawait blob.stream().pipeTo(writable, { preventClose: true, preventAbort: true, signal });\n\t\t\twritable.size += blob.size;\n\t\t\twritingBufferedEntryData = false;\n\t\t}\n\t\tfileEntry.offset = zipWriter.offset - diskOffset;\n\t\tif (fileEntry.zip64) {\n\t\t\tsetZip64ExtraInfo(fileEntry, options);\n\t\t} else if (fileEntry.offset >= MAX_32_BITS) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t}\n\t\tzipWriter.offset += fileEntry.length;\n\t\treturn fileEntry;\n\t} catch (error) {\n\t\tif ((bufferedWrite && writingBufferedEntryData) || (!bufferedWrite && writingEntryData)) {\n\t\t\tzipWriter.hasCorruptedEntries = true;\n\t\t\tif (error) {\n\t\t\t\ttry {\n\t\t\t\t\terror.corruptedEntry = true;\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bufferedWrite) {\n\t\t\t\tzipWriter.offset += fileWriter.writable.size;\n\t\t\t} else {\n\t\t\t\tzipWriter.offset = fileWriter.writable.size;\n\t\t\t}\n\t\t}\n\t\tfiles.delete(name);\n\t\tthrow error;\n\t} finally {\n\t\tif (bufferedWrite) {\n\t\t\tzipWriter.bufferedWrites--;\n\t\t}\n\t\tif (releaseLockCurrentFileEntry) {\n\t\t\treleaseLockCurrentFileEntry();\n\t\t}\n\t\tif (releaseLockWriter) {\n\t\t\treleaseLockWriter();\n\t\t}\n\t}\n\n\tfunction requestLockCurrentFileEntry() {\n\t\tfileEntry.lock = new Promise(resolve => releaseLockCurrentFileEntry = resolve);\n\t}\n\n\tasync function requestLockWriter() {\n\t\tzipWriter.writerLocked = true;\n\t\tconst { lockWriter } = zipWriter;\n\t\tzipWriter.lockWriter = new Promise(resolve => releaseLockWriter = () => {\n\t\t\tzipWriter.writerLocked = false;\n\t\t\tresolve();\n\t\t});\n\t\tawait lockWriter;\n\t}\n\n\tasync function skipDiskIfNeeded(writable) {\n\t\tif (headerInfo.localHeaderArray.length > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, new Uint8Array());\n\t\t}\n\t}\n}\n\nasync function createFileEntry(reader, writer, { diskNumberStart, lock }, entryInfo, config, options) {\n\tconst {\n\t\theaderInfo,\n\t\tdataDescriptorInfo,\n\t\tmetadataSize\n\t} = entryInfo;\n\tconst {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\trawExtraFieldExtendedTimestamp,\n\t\textraFieldExtendedTimestampFlag,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES\n\t} = headerInfo;\n\tconst { dataDescriptorArray } = dataDescriptorInfo;\n\tconst {\n\t\trawFilename,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\tversionMadeBy,\n\t\trawComment,\n\t\trawExtraField,\n\t\tuseWebWorkers,\n\t\tonstart,\n\t\tonprogress,\n\t\tonend,\n\t\tsignal,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t} = options;\n\tconst fileEntry = {\n\t\tlock,\n\t\tversionMadeBy,\n\t\tzip64,\n\t\tdirectory: Boolean(directory),\n\t\tfilenameUTF8: true,\n\t\trawFilename,\n\t\tcommentUTF8: true,\n\t\trawComment,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\trawExtraField,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tdiskNumberStart\n\t};\n\tlet compressedSize = 0;\n\tlet uncompressedSize = 0;\n\tlet signature;\n\tconst { writable } = writer;\n\tif (reader) {\n\t\treader.chunkSize = getChunkSize(config);\n\t\tawait writeData(writable, localHeaderArray);\n\t\tconst readable = reader.readable;\n\t\tconst size = readable.size = reader.size;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_DEFLATE,\n\t\t\t\tlevel,\n\t\t\t\tpassword,\n\t\t\t\tencryptionStrength,\n\t\t\t\tzipCrypto: encrypted && zipCrypto,\n\t\t\t\tpasswordVerification: encrypted && zipCrypto && (rawLastModDate >> 8) & 0xFF,\n\t\t\t\tsigned: true,\n\t\t\t\tcompressed,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers,\n\t\t\t\tuseCompressionStream,\n\t\t\t\ttransferStreams: false\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tconst result = await runWorker({ readable, writable }, workerOptions);\n\t\twritable.size += result.size;\n\t\tsignature = result.signature;\n\t\tuncompressedSize = reader.size = readable.size;\n\t\tcompressedSize = result.size;\n\t} else {\n\t\tawait writeData(writable, localHeaderArray);\n\t}\n\tlet rawExtraFieldZip64;\n\tif (zip64) {\n\t\tlet rawExtraFieldZip64Length = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64Offset) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64DiskNumberStart) {\n\t\t\trawExtraFieldZip64Length += 4;\n\t\t}\n\t\trawExtraFieldZip64 = new Uint8Array(rawExtraFieldZip64Length);\n\t} else {\n\t\trawExtraFieldZip64 = new Uint8Array();\n\t}\n\tsetEntryInfo({\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tcompressedSize,\n\t\tuncompressedSize,\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t}, options);\n\tif (dataDescriptor) {\n\t\tawait writeData(writable, dataDescriptorArray);\n\t}\n\tObject.assign(fileEntry, {\n\t\tuncompressedSize,\n\t\tcompressedSize,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tcreationDate,\n\t\tlastAccessDate,\n\t\tencrypted,\n\t\tlength: metadataSize + compressedSize,\n\t\tcompressionMethod,\n\t\tversion,\n\t\theaderArray,\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\textraFieldExtendedTimestampFlag,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart\n\t});\n\treturn fileEntry;\n}\n\nfunction getHeaderInfo(options) {\n\tconst {\n\t\trawFilename,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\trawExtraField,\n\t\tencryptionStrength,\n\t\textendedTimestamp\n\t} = options;\n\tconst compressed = level !== 0 && !directory;\n\tconst encrypted = Boolean(password && getLength(password));\n\tlet version = options.version;\n\tlet rawExtraFieldAES;\n\tif (encrypted && !zipCrypto) {\n\t\trawExtraFieldAES = new Uint8Array(getLength(EXTRAFIELD_DATA_AES) + 2);\n\t\tconst extraFieldAESView = getDataView(rawExtraFieldAES);\n\t\tsetUint16(extraFieldAESView, 0, EXTRAFIELD_TYPE_AES);\n\t\tarraySet(rawExtraFieldAES, EXTRAFIELD_DATA_AES, 2);\n\t\tsetUint8(extraFieldAESView, 8, encryptionStrength);\n\t} else {\n\t\trawExtraFieldAES = new Uint8Array();\n\t}\n\tlet rawExtraFieldNTFS;\n\tlet rawExtraFieldExtendedTimestamp;\n\tlet extraFieldExtendedTimestampFlag;\n\tif (extendedTimestamp) {\n\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9 + (lastAccessDate ? 4 : 0) + (creationDate ? 4 : 0));\n\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\n\t\textraFieldExtendedTimestampFlag = 0x1 + (lastAccessDate ? 0x2 : 0) + (creationDate ? 0x4 : 0);\n\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\tlet offset = 5;\n\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(lastModDate.getTime() / 1000));\n\t\toffset += 4;\n\t\tif (lastAccessDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(lastAccessDate.getTime() / 1000));\n\t\t\toffset += 4;\n\t\t}\n\t\tif (creationDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, offset, Math.floor(creationDate.getTime() / 1000));\n\t\t}\n\t\ttry {\n\t\t\trawExtraFieldNTFS = new Uint8Array(36);\n\t\t\tconst extraFieldNTFSView = getDataView(rawExtraFieldNTFS);\n\t\t\tconst lastModTimeNTFS = getTimeNTFS(lastModDate);\n\t\t\tsetUint16(extraFieldNTFSView, 0, EXTRAFIELD_TYPE_NTFS);\n\t\t\tsetUint16(extraFieldNTFSView, 2, 32);\n\t\t\tsetUint16(extraFieldNTFSView, 8, EXTRAFIELD_TYPE_NTFS_TAG1);\n\t\t\tsetUint16(extraFieldNTFSView, 10, 24);\n\t\t\tsetBigUint64(extraFieldNTFSView, 12, lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 20, getTimeNTFS(lastAccessDate) || lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 28, getTimeNTFS(creationDate) || lastModTimeNTFS);\n\t\t} catch (_error) {\n\t\t\trawExtraFieldNTFS = new Uint8Array();\n\t\t}\n\t} else {\n\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array();\n\t}\n\tlet bitFlag = BITFLAG_LANG_ENCODING_FLAG;\n\tif (dataDescriptor) {\n\t\tbitFlag = bitFlag | BITFLAG_DATA_DESCRIPTOR;\n\t}\n\tlet compressionMethod = COMPRESSION_METHOD_STORE;\n\tif (compressed) {\n\t\tcompressionMethod = COMPRESSION_METHOD_DEFLATE;\n\t}\n\tif (zip64) {\n\t\tversion = version > VERSION_ZIP64 ? version : VERSION_ZIP64;\n\t}\n\tif (encrypted) {\n\t\tbitFlag = bitFlag | BITFLAG_ENCRYPTED;\n\t\tif (!zipCrypto) {\n\t\t\tversion = version > VERSION_AES ? version : VERSION_AES;\n\t\t\tcompressionMethod = COMPRESSION_METHOD_AES;\n\t\t\tif (compressed) {\n\t\t\t\trawExtraFieldAES[9] = COMPRESSION_METHOD_DEFLATE;\n\t\t\t}\n\t\t}\n\t}\n\tconst headerArray = new Uint8Array(26);\n\tconst headerView = getDataView(headerArray);\n\tsetUint16(headerView, 0, version);\n\tsetUint16(headerView, 2, bitFlag);\n\tsetUint16(headerView, 4, compressionMethod);\n\tconst dateArray = new Uint32Array(1);\n\tconst dateView = getDataView(dateArray);\n\tlet lastModDateMsDos;\n\tif (lastModDate < MIN_DATE) {\n\t\tlastModDateMsDos = MIN_DATE;\n\t} else if (lastModDate > MAX_DATE) {\n\t\tlastModDateMsDos = MAX_DATE;\n\t} else {\n\t\tlastModDateMsDos = lastModDate;\n\t}\n\tsetUint16(dateView, 0, (((lastModDateMsDos.getHours() << 6) | lastModDateMsDos.getMinutes()) << 5) | lastModDateMsDos.getSeconds() / 2);\n\tsetUint16(dateView, 2, ((((lastModDateMsDos.getFullYear() - 1980) << 4) | (lastModDateMsDos.getMonth() + 1)) << 5) | lastModDateMsDos.getDate());\n\tconst rawLastModDate = dateArray[0];\n\tsetUint32(headerView, 6, rawLastModDate);\n\tsetUint16(headerView, 22, getLength(rawFilename));\n\tconst extraFieldLength = getLength(rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\tsetUint16(headerView, 24, extraFieldLength);\n\tconst localHeaderArray = new Uint8Array(30 + getLength(rawFilename) + extraFieldLength);\n\tconst localHeaderView = getDataView(localHeaderArray);\n\tsetUint32(localHeaderView, 0, LOCAL_FILE_HEADER_SIGNATURE);\n\tarraySet(localHeaderArray, headerArray, 4);\n\tarraySet(localHeaderArray, rawFilename, 30);\n\tarraySet(localHeaderArray, rawExtraFieldAES, 30 + getLength(rawFilename));\n\tarraySet(localHeaderArray, rawExtraFieldExtendedTimestamp, 30 + getLength(rawFilename, rawExtraFieldAES));\n\tarraySet(localHeaderArray, rawExtraFieldNTFS, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\n\tarraySet(localHeaderArray, rawExtraField, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\n\treturn {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\theaderView,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\textraFieldExtendedTimestampFlag,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\textraFieldLength\n\t};\n}\n\nfunction appendExtraFieldUSDZ(entryInfo, zipWriterOffset) {\n\tconst { headerInfo } = entryInfo;\n\tlet { localHeaderArray, extraFieldLength } = headerInfo;\n\tlet localHeaderArrayView = getDataView(localHeaderArray);\n\tlet extraBytesLength = 64 - ((zipWriterOffset + localHeaderArray.length) % 64);\n\tif (extraBytesLength < 4) {\n\t\textraBytesLength += 64;\n\t}\n\tconst rawExtraFieldUSDZ = new Uint8Array(extraBytesLength);\n\tconst extraFieldUSDZView = getDataView(rawExtraFieldUSDZ);\n\tsetUint16(extraFieldUSDZView, 0, EXTRAFIELD_TYPE_USDZ);\n\tsetUint16(extraFieldUSDZView, 2, extraBytesLength - 2);\n\tconst previousLocalHeaderArray = localHeaderArray;\n\theaderInfo.localHeaderArray = localHeaderArray = new Uint8Array(previousLocalHeaderArray.length + extraBytesLength);\n\tarraySet(localHeaderArray, previousLocalHeaderArray);\n\tarraySet(localHeaderArray, rawExtraFieldUSDZ, previousLocalHeaderArray.length);\n\tlocalHeaderArrayView = getDataView(localHeaderArray);\n\tsetUint16(localHeaderArrayView, 28, extraFieldLength + extraBytesLength);\n\tentryInfo.metadataSize += extraBytesLength;\n}\n\nfunction getDataDescriptorInfo(options) {\n\tconst {\n\t\tzip64,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature\n\t} = options;\n\tlet dataDescriptorArray = new Uint8Array();\n\tlet dataDescriptorView, dataDescriptorOffset = 0;\n\tif (dataDescriptor) {\n\t\tdataDescriptorArray = new Uint8Array(zip64 ? (dataDescriptorSignature ? 24 : 20) : (dataDescriptorSignature ? 16 : 12));\n\t\tdataDescriptorView = getDataView(dataDescriptorArray);\n\t\tif (dataDescriptorSignature) {\n\t\t\tdataDescriptorOffset = 4;\n\t\t\tsetUint32(dataDescriptorView, 0, DATA_DESCRIPTOR_RECORD_SIGNATURE);\n\t\t}\n\t}\n\treturn {\n\t\tdataDescriptorArray,\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t};\n}\n\nfunction setEntryInfo(entryInfo, options) {\n\tconst {\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tcompressedSize,\n\t\tuncompressedSize,\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t} = entryInfo;\n\tconst {\n\t\theaderView,\n\t\tencrypted\n\t} = headerInfo;\n\tconst {\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t} = dataDescriptorInfo;\n\tconst {\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzipCrypto,\n\t\tdataDescriptor\n\t} = options;\n\tif ((!encrypted || zipCrypto) && signature !== UNDEFINED_VALUE) {\n\t\tsetUint32(headerView, 10, signature);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset, signature);\n\t\t}\n\t}\n\tif (zip64) {\n\t\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\t\tsetUint16(rawExtraFieldZip64View, 0, EXTRAFIELD_TYPE_ZIP64);\n\t\tsetUint16(rawExtraFieldZip64View, 2, rawExtraFieldZip64.length - 4);\n\t\tlet rawExtraFieldZip64Offset = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(uncompressedSize));\n\t\t\trawExtraFieldZip64Offset += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(compressedSize));\n\t\t}\n\t\tif (dataDescriptor) {\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 4, BigInt(compressedSize));\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 12, BigInt(uncompressedSize));\n\t\t}\n\t} else {\n\t\tsetUint32(headerView, 14, compressedSize);\n\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 4, compressedSize);\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 8, uncompressedSize);\n\t\t}\n\t}\n}\n\nasync function writeExtraHeaderInfo(fileEntry, entryData, writable, { zipCrypto }) {\n\tlet arrayBuffer;\n\tarrayBuffer = await entryData.slice(0, 26).arrayBuffer();\n\tif (arrayBuffer.byteLength != 26) {\n\t\tarrayBuffer = arrayBuffer.slice(0, 26);\n\t}\n\tconst arrayBufferView = new DataView(arrayBuffer);\n\tif (!fileEntry.encrypted || zipCrypto) {\n\t\tsetUint32(arrayBufferView, 14, fileEntry.signature);\n\t}\n\tif (fileEntry.zip64) {\n\t\tsetUint32(arrayBufferView, 18, MAX_32_BITS);\n\t\tsetUint32(arrayBufferView, 22, MAX_32_BITS);\n\t} else {\n\t\tsetUint32(arrayBufferView, 18, fileEntry.compressedSize);\n\t\tsetUint32(arrayBufferView, 22, fileEntry.uncompressedSize);\n\t}\n\tawait writeData(writable, new Uint8Array(arrayBuffer));\n\treturn entryData.slice(arrayBuffer.byteLength);\n}\n\nfunction setZip64ExtraInfo(fileEntry, options) {\n\tconst { rawExtraFieldZip64, offset, diskNumberStart } = fileEntry;\n\tconst { zip64UncompressedSize, zip64CompressedSize, zip64Offset, zip64DiskNumberStart } = options;\n\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\tlet rawExtraFieldZip64Offset = 4;\n\tif (zip64UncompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64CompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64Offset) {\n\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(offset));\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64DiskNumberStart) {\n\t\tsetUint32(rawExtraFieldZip64View, rawExtraFieldZip64Offset, diskNumberStart);\n\t}\n}\n\nasync function closeFile(zipWriter, comment, options) {\n\tconst { files, writer } = zipWriter;\n\tconst { diskOffset, writable } = writer;\n\tlet { diskNumber } = writer;\n\tlet offset = 0;\n\tlet directoryDataLength = 0;\n\tlet directoryOffset = zipWriter.offset - diskOffset;\n\tlet filesLength = files.size;\n\tfor (const [, fileEntry] of files) {\n\t\tconst {\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawComment,\n\t\t\trawExtraFieldNTFS,\n\t\t\trawExtraField,\n\t\t\textendedTimestamp,\n\t\t\textraFieldExtendedTimestampFlag,\n\t\t\tlastModDate\n\t\t} = fileEntry;\n\t\tlet rawExtraFieldTimestamp;\n\t\tif (extendedTimestamp) {\n\t\t\trawExtraFieldTimestamp = new Uint8Array(9);\n\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldTimestamp);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, 5);\n\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\n\t\t} else {\n\t\t\trawExtraFieldTimestamp = new Uint8Array();\n\t\t}\n\t\tfileEntry.rawExtraFieldCDExtendedTimestamp = rawExtraFieldTimestamp;\n\t\tdirectoryDataLength += 46 +\n\t\t\tgetLength(\n\t\t\t\trawFilename,\n\t\t\t\trawComment,\n\t\t\t\trawExtraFieldZip64,\n\t\t\t\trawExtraFieldAES,\n\t\t\t\trawExtraFieldNTFS,\n\t\t\t\trawExtraFieldTimestamp,\n\t\t\t\trawExtraField);\n\t}\n\tconst directoryArray = new Uint8Array(directoryDataLength);\n\tconst directoryView = getDataView(directoryArray);\n\tawait initStream(writer);\n\tlet directoryDiskOffset = 0;\n\tfor (const [indexFileEntry, fileEntry] of Array.from(files.values()).entries()) {\n\t\tconst {\n\t\t\toffset: fileEntryOffset,\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawExtraFieldCDExtendedTimestamp,\n\t\t\trawExtraFieldNTFS,\n\t\t\trawExtraField,\n\t\t\trawComment,\n\t\t\tversionMadeBy,\n\t\t\theaderArray,\n\t\t\tdirectory,\n\t\t\tzip64,\n\t\t\tzip64UncompressedSize,\n\t\t\tzip64CompressedSize,\n\t\t\tzip64DiskNumberStart,\n\t\t\tzip64Offset,\n\t\t\tmsDosCompatible,\n\t\t\tinternalFileAttribute,\n\t\t\texternalFileAttribute,\n\t\t\tdiskNumberStart,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = fileEntry;\n\t\tconst extraFieldLength = getLength(rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\t\tsetUint32(directoryView, offset, CENTRAL_FILE_HEADER_SIGNATURE);\n\t\tsetUint16(directoryView, offset + 4, versionMadeBy);\n\t\tconst headerView = getDataView(headerArray);\n\t\tif (!zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\t}\n\t\tif (!zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, compressedSize);\n\t\t}\n\t\tarraySet(directoryArray, headerArray, offset + 6);\n\t\tsetUint16(directoryView, offset + 30, extraFieldLength);\n\t\tsetUint16(directoryView, offset + 32, getLength(rawComment));\n\t\tsetUint16(directoryView, offset + 34, zip64 && zip64DiskNumberStart ? MAX_16_BITS : diskNumberStart);\n\t\tsetUint16(directoryView, offset + 36, internalFileAttribute);\n\t\tif (externalFileAttribute) {\n\t\t\tsetUint32(directoryView, offset + 38, externalFileAttribute);\n\t\t} else if (directory && msDosCompatible) {\n\t\t\tsetUint8(directoryView, offset + 38, FILE_ATTR_MSDOS_DIR_MASK);\n\t\t}\n\t\tsetUint32(directoryView, offset + 42, zip64 && zip64Offset ? MAX_32_BITS : fileEntryOffset);\n\t\tarraySet(directoryArray, rawFilename, offset + 46);\n\t\tarraySet(directoryArray, rawExtraFieldZip64, offset + 46 + getLength(rawFilename));\n\t\tarraySet(directoryArray, rawExtraFieldAES, offset + 46 + getLength(rawFilename, rawExtraFieldZip64));\n\t\tarraySet(directoryArray, rawExtraFieldCDExtendedTimestamp, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES));\n\t\tarraySet(directoryArray, rawExtraFieldNTFS, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp));\n\t\tarraySet(directoryArray, rawExtraField, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldCDExtendedTimestamp, rawExtraFieldNTFS));\n\t\tarraySet(directoryArray, rawComment, offset + 46 + getLength(rawFilename) + extraFieldLength);\n\t\tconst directoryEntryLength = 46 + getLength(rawFilename, rawComment) + extraFieldLength;\n\t\tif (offset - directoryDiskOffset > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, directoryArray.slice(directoryDiskOffset, offset));\n\t\t\tdirectoryDiskOffset = offset;\n\t\t}\n\t\toffset += directoryEntryLength;\n\t\tif (options.onprogress) {\n\t\t\ttry {\n\t\t\t\tawait options.onprogress(indexFileEntry + 1, files.size, new Entry(fileEntry));\n\t\t\t} catch (_error) {\n\t\t\t\t// ignored\n\t\t\t}\n\t\t}\n\t}\n\tawait writeData(writable, directoryDiskOffset ? directoryArray.slice(directoryDiskOffset) : directoryArray);\n\tlet lastDiskNumber = writer.diskNumber;\n\tconst { availableSize } = writer;\n\tif (availableSize < END_OF_CENTRAL_DIR_LENGTH) {\n\t\tlastDiskNumber++;\n\t}\n\tlet zip64 = getOptionValue(zipWriter, options, \"zip64\");\n\tif (directoryOffset >= MAX_32_BITS || directoryDataLength >= MAX_32_BITS || filesLength >= MAX_16_BITS || lastDiskNumber >= MAX_16_BITS) {\n\t\tif (zip64 === false) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tconst endOfdirectoryArray = new Uint8Array(zip64 ? ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH : END_OF_CENTRAL_DIR_LENGTH);\n\tconst endOfdirectoryView = getDataView(endOfdirectoryArray);\n\toffset = 0;\n\tif (zip64) {\n\t\tsetUint32(endOfdirectoryView, 0, ZIP64_END_OF_CENTRAL_DIR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 4, BigInt(44));\n\t\tsetUint16(endOfdirectoryView, 12, 45);\n\t\tsetUint16(endOfdirectoryView, 14, 45);\n\t\tsetUint32(endOfdirectoryView, 16, lastDiskNumber);\n\t\tsetUint32(endOfdirectoryView, 20, diskNumber);\n\t\tsetBigUint64(endOfdirectoryView, 24, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 32, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 40, BigInt(directoryDataLength));\n\t\tsetBigUint64(endOfdirectoryView, 48, BigInt(directoryOffset));\n\t\tsetUint32(endOfdirectoryView, 56, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 64, BigInt(directoryOffset) + BigInt(directoryDataLength));\n\t\tsetUint32(endOfdirectoryView, 72, lastDiskNumber + 1);\n\t\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\t\tif (supportZip64SplitFile) {\n\t\t\tlastDiskNumber = MAX_16_BITS;\n\t\t\tdiskNumber = MAX_16_BITS;\n\t\t}\n\t\tfilesLength = MAX_16_BITS;\n\t\tdirectoryOffset = MAX_32_BITS;\n\t\tdirectoryDataLength = MAX_32_BITS;\n\t\toffset += ZIP64_END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH;\n\t}\n\tsetUint32(endOfdirectoryView, offset, END_OF_CENTRAL_DIR_SIGNATURE);\n\tsetUint16(endOfdirectoryView, offset + 4, lastDiskNumber);\n\tsetUint16(endOfdirectoryView, offset + 6, diskNumber);\n\tsetUint16(endOfdirectoryView, offset + 8, filesLength);\n\tsetUint16(endOfdirectoryView, offset + 10, filesLength);\n\tsetUint32(endOfdirectoryView, offset + 12, directoryDataLength);\n\tsetUint32(endOfdirectoryView, offset + 16, directoryOffset);\n\tconst commentLength = getLength(comment);\n\tif (commentLength) {\n\t\tif (commentLength <= MAX_16_BITS) {\n\t\t\tsetUint16(endOfdirectoryView, offset + 20, commentLength);\n\t\t} else {\n\t\t\tthrow new Error(ERR_INVALID_COMMENT);\n\t\t}\n\t}\n\tawait writeData(writable, endOfdirectoryArray);\n\tif (commentLength) {\n\t\tawait writeData(writable, comment);\n\t}\n}\n\nasync function writeData(writable, array) {\n\tconst streamWriter = writable.getWriter();\n\tawait streamWriter.ready;\n\twritable.size += getLength(array);\n\tawait streamWriter.write(array);\n\tstreamWriter.releaseLock();\n}\n\nfunction getTimeNTFS(date) {\n\tif (date) {\n\t\treturn ((BigInt(date.getTime()) + BigInt(11644473600000)) * BigInt(10000));\n\t}\n}\n\nfunction getOptionValue(zipWriter, options, name, defaultValue) {\n\tconst result = options[name] === UNDEFINED_VALUE ? zipWriter.options[name] : options[name];\n\treturn result === UNDEFINED_VALUE ? defaultValue : result;\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nfunction setUint8(view, offset, value) {\n\tview.setUint8(offset, value);\n}\n\nfunction setUint16(view, offset, value) {\n\tview.setUint16(offset, value, true);\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction setBigUint64(view, offset, value) {\n\tview.setBigUint64(offset, value, true);\n}\n\nfunction arraySet(array, typedArray, offset) {\n\tarray.set(typedArray, offset);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}\n\nfunction getLength(...arrayLikes) {\n\tlet result = 0;\n\tarrayLikes.forEach(arrayLike => arrayLike && (result += arrayLike.length));\n\treturn result;\n}", "/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { configure } from \"./core/configuration.js\";\nimport { configureWebWorker } from \"./z-worker-inline.js\";\nimport { getMimeType } from \"./core/util/default-mime-type.js\";\nimport { initShimAsyncCodec } from \"./core/util/stream-codec-shim.js\";\nimport { terminateWorkers } from \"./core/codec-pool.js\";\n\nlet baseURL;\ntry {\n\tbaseURL = import.meta.url;\n} catch (_error) {\n\t// ignored\n}\nconfigure({ baseURL });\nconfigureWebWorker(configure);\n\nexport * from \"./core/io.js\";\nexport * from \"./core/zip-reader.js\";\nexport * from \"./core/zip-writer.js\";\nexport {\n\tconfigure,\n\tgetMimeType,\n\tinitShimAsyncCodec,\n\tterminateWorkers\n};"],
  "mappings": "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",
  "names": ["codec", "config", "baseURL", "maxWorkers", "CompressionStream", "DecompressionStream", "e", "codec", "hash", "e", "table", "UNDEFINED_TYPE", "FUNCTION_TYPE", "password", "signed", "decrypt", "encrypt", "codecBytes", "createKeys", "createKeys", "CompressionStream", "DecompressionStream", "CodecStream", "CompressionStream", "config", "codec", "Stream", "config", "baseURL", "value", "error", "result", "runWorker", "config", "maxWorkers", "workerData", "stream", "workerOptions", "getRequestData", "headers", "baseURL", "config", "endOfDirectoryView", "commentOffset", "commentLength", "options", "config", "runWorker", "config", "getOptionValue", "getOptionValue", "getDataView", "setUint32", "config", "runWorker", "zip64"]
}
